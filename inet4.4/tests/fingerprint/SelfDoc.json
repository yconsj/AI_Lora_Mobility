{
 "inet.applications.dhcp.DhcpClient": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetBroadcastCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::DhcpMessage"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::DhcpMessage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1 (inet::DhcpTimerType::WAIT_OFFER)",
    "ctrl": "",
    "tags": [],
    "msgname": "DHCP Timeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3 (inet::DhcpTimerType::T1)",
    "ctrl": "",
    "tags": [],
    "msgname": "TN Timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "4 (inet::DhcpTimerType::T2)",
    "ctrl": "",
    "tags": [],
    "msgname": "TN Timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5 (inet::DhcpTimerType::LEASE_TIMEOUT)",
    "ctrl": "",
    "tags": [],
    "msgname": "Lease Timeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "6 (inet::DhcpTimerType::START_DHCP)",
    "ctrl": "",
    "tags": [],
    "msgname": "Starting DHCP",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.dhcp.DhcpServer": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetBroadcastCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::DhcpMessage"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::DhcpMessage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "Start DHCP server",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.ethernet.EtherAppClient": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EtherAppReq"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "100",
    "ctrl": "",
    "tags": [],
    "msgname": "generateNextPacket",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "101",
    "ctrl": "",
    "tags": [],
    "msgname": "generateNextPacket",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.ethernet.EtherAppServer": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EtherAppResp"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EtherAppReq"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ieee802SapInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   }
  ]
 },
 "inet.applications.ethernet.EtherTrafGen": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "100",
    "ctrl": "",
    "tags": [],
    "msgname": "generateNextPacket",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "101",
    "ctrl": "",
    "tags": [],
    "msgname": "generateNextPacket",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   }
  ]
 },
 "inet.applications.generic.IpvxTrafGen": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "100",
    "ctrl": "",
    "tags": [],
    "msgname": "sendTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "101",
    "ctrl": "",
    "tags": [],
    "msgname": "sendTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.generic.IpvxTrafSink": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressReq"
   }
  ]
 },
 "inet.applications.netperfmeter.NetPerfMeter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "14 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_FULL)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "15 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_ABATED)",
    "ctrl": "",
    "tags": [
     "inet::SctpSendQueueAbatedReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
    "ctrl": "",
    "tags": [
     "inet::SctpAvailableReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
    "ctrl": "",
    "tags": [
     "inet::SctpConnectReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SctpRcvReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "9 (inet::SctpCommandCode::SCTP_C_SEND_ORDERED)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "12 (inet::SctpCommandCode::SCTP_C_QUEUE_BYTES_LIMIT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpInfoReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpOpenReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpAvailableReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpOpenReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
    "ctrl": "inet::UdpConnectCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "8 (inet::TcpCommandCode::TCP_C_QUEUE_BYTES_LIMIT)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::NetPerfMeterTransmitTimer",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "TransmitTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "ConnectTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "StartTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "ResetTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpAvailableReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpInfoReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpOpenReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpSendReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpConnectReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpRcvReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpAvailableReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpCommandReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpConnectReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpSendQueueAbatedReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.pingapp.PingApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.power.management.SimpleEpEnergyManagement",
    "function": "inet::power::SimpleEpEnergyManagement::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "1",
    "ctrl": "inet::Ipv4SocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::Ipv4SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::Ipv6SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::L3SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3",
    "ctrl": "inet::Ipv4SocketCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EchoPacket"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::IcmpEchoRequest"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Icmpv6EchoRequestMsg"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EchoPacket"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Icmpv6Header"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1001 (inet::PingSelfKinds::PING_FIRST_ADDR)",
    "ctrl": "",
    "tags": [],
    "msgname": "sendPing",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1002 (inet::PingSelfKinds::PING_CHANGE_ADDR)",
    "ctrl": "",
    "tags": [],
    "msgname": "sendPing",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1003 (inet::PingSelfKinds::PING_SEND)",
    "ctrl": "",
    "tags": [],
    "msgname": "sendPing",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.applications.rtpapp.RtpApplication": {
  "INPUT": [
   {
    "gate": "rtpIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSenderModuleCreated",
    "tags": []
   },
   {
    "gate": "rtpIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSenderStatus",
    "tags": []
   },
   {
    "gate": "rtpIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSessionEntered",
    "tags": []
   },
   {
    "gate": "rtpIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSessionLeft",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "rtpOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiCreateSenderModule",
    "tags": []
   },
   {
    "gate": "rtpOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiEnterSession",
    "tags": []
   },
   {
    "gate": "rtpOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiLeaveSession",
    "tags": []
   },
   {
    "gate": "rtpOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSenderControl",
    "tags": []
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1 (inet::RtpAppSelfMsgKinds::RTPAPP_ENTER_SESSION)",
    "ctrl": "",
    "tags": [],
    "msgname": "enterSession",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2 (inet::RtpAppSelfMsgKinds::RTPAPP_START_TRANSMISSION)",
    "ctrl": "",
    "tags": [],
    "msgname": "startTransmission",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3 (inet::RtpAppSelfMsgKinds::RTPAPP_STOP_TRANSMISSION)",
    "ctrl": "",
    "tags": [],
    "msgname": "stopTransmission",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "4 (inet::RtpAppSelfMsgKinds::RTPAPP_LEAVE_SESSION)",
    "ctrl": "",
    "tags": [],
    "msgname": "leaveSession",
    "context": ""
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.sctpapp.SctpClient": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "12 (inet::SctpStatusInd::SCTP_I_SEND_MSG)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
    "ctrl": "",
    "tags": [
     "inet::SctpConnectReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "3 (inet::SctpCommandCode::SCTP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "13 (inet::SctpCommandCode::SCTP_C_QUEUE_MSGS_LIMIT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpInfoReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "14 (inet::SctpCommandCode::SCTP_C_SHUTDOWN)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpOpenReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::SctpCommandCode::SCTP_C_CLOSE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "CliAppTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "CliAppTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "StopTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpCommandReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpInfoReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpOpenReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpSendReq"
   },
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::SctpSendReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpConnectReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.applications.sctpapp.SctpServer": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "10 (inet::SctpStatusInd::SCTP_I_ABORT)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "13 (inet::SctpStatusInd::SCTP_I_SHUTDOWN_RECEIVED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
    "ctrl": "",
    "tags": [
     "inet::SctpAvailableReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
    "ctrl": "",
    "tags": [
     "inet::SctpConnectReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::SctpStatusInd::SCTP_I_PEER_CLOSED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SctpRcvReq",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "15 (inet::SctpCommandCode::SCTP_C_NO_OUTSTANDING)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpAvailableReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpOpenReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpAvailableReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpCommandReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpOpenReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpSendReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpCommandReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpRcvReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpAvailableReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpConnectReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.tcpapp.TcpBasicClientApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::GenericAppMsg"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.tcpapp.TcpClientSocketIo": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "trafficIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "trafficOut",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.tcpapp.TcpEchoApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.applications.tcpapp.TcpGenericServerApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::GenericAppMsg"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.tcpapp.TcpServerListener": {
  "CALL": [
   {
    "call to": "inet.applications.tcpapp.TcpServerSocketIo",
    "function": "inet::TcpServerSocketIo::acceptSocket",
    "info": "acceptSocket"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.tcpapp.TcpServerSocketIo": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "trafficIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "trafficOut",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.tcpapp.TcpSessionApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ApplicationPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.applications.tcpapp.TcpSinkApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.tcpapp.TelnetApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::GenericAppMsg"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.applications.tunapp.TunnelApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TunCommandCode::TUN_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TunCommandCode::TUN_C_OPEN)",
    "ctrl": "inet::TunOpenCommand",
    "tags": [
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
    "ctrl": "inet::UdpConnectCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::TransportProtocolInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpBasicApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
    "ctrl": "inet::UdpErrorIndication",
    "tags": [
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ApplicationPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "sendTimer",
    "context": ""
   },
   {
    "msg": "inet::ClockEvent",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "sendTimer",
    "context": ""
   },
   {
    "msg": "inet::ClockEvent",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "sendTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpBasicBurst": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
    "ctrl": "inet::UdpErrorIndication",
    "tags": [
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ApplicationPacket"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "UDPBasicBurstTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "UDPBasicBurstTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "UDPBasicBurstTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpEchoApp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
    "ctrl": "inet::UdpErrorIndication",
    "tags": [
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L4PortInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpSink": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpLeaveMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetBroadcastCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "UDPSinkTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "UDPSinkTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpSocketIo": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "trafficIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
    "ctrl": "inet::UdpConnectCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "trafficOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "trafficOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "trafficOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpVideoStreamClient": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "UDPVideoStreamStart",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.udpapp.UdpVideoStreamServer": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
    "ctrl": "inet::UdpErrorIndication",
    "tags": [
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "VideoStreamTmr",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L4PortInd"
   }
  ]
 },
 "inet.applications.voip.SimpleVoipReceiver": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::SimpleVoipPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "selfTalkspurtFinished",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.applications.voip.SimpleVoipSender": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SimpleVoipPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "selfSender",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "selfSource",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.applications.voipstream.VoipStreamReceiver": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::VoipStreamPacket"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::VoipStreamPacket"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L4PortInd"
   }
  ]
 },
 "inet.applications.voipstream.VoipStreamSender": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::VoipStreamPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "SILENCE",
    "context": ""
   },
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "VOICE",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "sendVoIP",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.clock.model.SettableClock": {
  "CALL": [
   {
    "call to": "inet.clock.model.SettableClock",
    "function": "inet::SettableClock::setClockTime",
    "info": "setClockTime"
   },
   {
    "call to": "inet.clock.oscillator.ConstantDriftOscillator",
    "function": "inet::ConstantDriftOscillator::setTickOffset",
    "info": "setTickOffset"
   }
  ]
 },
 "inet.clock.oscillator.RandomDriftOscillator": {
  "CALL": [
   {
    "call to": "inet.clock.model.OscillatorBasedClock",
    "function": "inet::OscillatorBasedClock::receiveSignal",
    "info": "postOscillatorStateChanged"
   },
   {
    "call to": "inet.clock.model.OscillatorBasedClock",
    "function": "inet::OscillatorBasedClock::receiveSignal",
    "info": "preOscillatorStateChanged"
   },
   {
    "call to": "inet.clock.oscillator.RandomDriftOscillator",
    "function": "inet::RandomDriftOscillator::setDriftRate",
    "info": "setDriftRate"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ChangeTimer",
    "context": ""
   }
  ]
 },
 "inet.common.MessageDispatcher": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
    "info": "handleRegisterAnyProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyService",
    "info": "handleRegisterAnyService"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.common.ExampleQosClassifier",
    "function": "inet::ExampleQosClassifier::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.common.ExampleQosClassifier",
    "function": "inet::ExampleQosClassifier::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.common.QosClassifier",
    "function": "inet::QosClassifier::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.common.QosClassifier",
    "function": "inet::QosClassifier::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
    "function": "inet::EthernetEncapsulation::handleRegisterAnyProtocol",
    "info": "handleRegisterAnyProtocol"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
    "function": "inet::EthernetEncapsulation::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
    "function": "inet::EthernetEncapsulation::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ethernet.common.PacketDirectionReverser",
    "function": "inet::PacketDirectionReverser::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
    "function": "inet::EthernetFcsChecker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
    "function": "inet::EthernetMacHeaderInserter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker",
    "function": "inet::Ieee8021qTagEpdHeaderChecker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
    "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
    "function": "inet::Ieee8022Llc::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
    "function": "inet::Ieee8022Llc::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.virtual.VirtualInterface",
    "function": "inet::NetworkInterface::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.vlan.VlanIndFilter",
    "function": "inet::VlanIndFilter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.networklayer.flooding.Flooding",
    "function": "inet::Flooding::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.flooding.Flooding",
    "function": "inet::Flooding::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.icmpv6.Icmpv6",
    "function": "inet::Icmpv6::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.icmpv6.Icmpv6",
    "function": "inet::Icmpv6::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv4.Icmp",
    "function": "inet::Icmp::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.ipv4.Icmp",
    "function": "inet::Icmp::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.mpls.Mpls",
    "function": "inet::Mpls::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.mpls.Mpls",
    "function": "inet::Mpls::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopForwarding",
    "function": "inet::NextHopForwarding::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopForwarding",
    "function": "inet::NextHopForwarding::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
    "function": "inet::AdaptiveProbabilisticBroadcast::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
    "function": "inet::AdaptiveProbabilisticBroadcast::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
    "function": "inet::ProbabilisticBroadcast::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
    "function": "inet::ProbabilisticBroadcast::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.wiseroute.WiseRoute",
    "function": "inet::WiseRoute::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.wiseroute.WiseRoute",
    "function": "inet::WiseRoute::handleRegisterService",
    "info": "handleRegisterService"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::SocketInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::SocketInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.common.misc.MessageChecker": {
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Indication",
    "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Request",
    "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
    "ctrl": "inet::TcpSetTimeToLiveCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Request",
    "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Indication",
    "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
    "ctrl": "inet::TcpSetTimeToLiveCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Request",
    "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ]
 },
 "inet.common.packet.recorder.PcapRecorder": {
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::AckingMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ArpPacket"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.common.scenario.ScenarioManager": {
  "CALL": [
   {
    "call to": "inet.applications.dhcp.DhcpClient",
    "function": "inet::DhcpClient::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.applications.dhcp.DhcpServer",
    "function": "inet::DhcpServer::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.applications.pingapp.PingApp",
    "function": "inet::PingApp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.applications.tcpapp.TelnetApp",
    "function": "inet::TelnetApp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.applications.udpapp.UdpBasicApp",
    "function": "inet::UdpBasicApp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.applications.udpapp.UdpBasicBurst",
    "function": "inet::UdpBasicBurst::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.applications.udpapp.UdpVideoStreamClient",
    "function": "inet::UdpVideoStreamClient::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.clock.model.SettableClock",
    "function": "inet::SettableClock::processCommand",
    "info": "processCommand"
   },
   {
    "call to": "inet.common.lifecycle.NodeStatus",
    "function": "inet::NodeStatus::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.configurator.L2NodeConfigurator",
    "function": "inet::L2NodeConfigurator::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
    "function": "inet::EthernetEncapsulation::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc",
    "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
    "function": "inet::Ieee8021dRelay::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee8021d.rstp.Rstp",
    "function": "inet::Rstp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee8021d.stp.Stp",
    "function": "inet::Stp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
    "function": "inet::Ieee8022Llc::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.Loopback",
    "function": "inet::Loopback::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.Arp",
    "function": "inet::Arp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.GlobalArp",
    "function": "inet::GlobalArp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
    "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ldp.Ldp",
    "function": "inet::Ldp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopForwarding",
    "function": "inet::NextHopForwarding::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.rsvpte.RsvpTe",
    "function": "inet::RsvpTe::addSession",
    "info": "addSession"
   },
   {
    "call to": "inet.networklayer.rsvpte.RsvpTe",
    "function": "inet::RsvpTe::delSession",
    "info": "delSession"
   },
   {
    "call to": "inet.networklayer.rsvpte.RsvpTe",
    "function": "inet::RsvpTe::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ted.Ted",
    "function": "inet::Ted::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
    "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.protocolelement.transceiver.PacketReceiver",
    "function": "inet::PacketReceiver::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.protocolelement.transceiver.PacketTransmitter",
    "function": "inet::PacketTransmitter::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.routing.dsdv.Dsdv",
    "function": "inet::Dsdv::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.routing.ospfv2.Ospfv2",
    "function": "inet::ospfv2::Ospfv2::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.routing.rip.Rip",
    "function": "inet::Rip::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.transportlayer.tcp.Tcp",
    "function": "inet::tcp::Tcp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.transportlayer.udp.Udp",
    "function": "inet::Udp::handleOperationStage",
    "info": "handleOperationStage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ScenarioTimer",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "scenario-event",
    "context": ""
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.emulation.transportlayer.udp.ExtLowerUdp": {
  "INPUT": [
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAllAsBytes",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.examples.adhoc.hostautoconf.Scenario": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.adhoc.idealwireless.Net": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.adhoc.ieee80211.Net80211": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.adhoc.qos.QosThroughput": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.aodv.AODVNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.aodv.ShortestPath": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.aodv.SimpleRREQ2": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.aodv.SimpleRREQ": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.Bgp2RoutersInAS.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.Bgp3Routers.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.BgpAndOspf.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.BgpAndOspfSimple.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.BgpCompleteTest.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.BgpOpen.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.bgpv4.BgpUpdate.BgpNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.communicationcache.CommunicationCacheExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.dhcp.DHCPShutdownReboot": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.dhcp.WiredNetWithDHCP": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.dhcp.WirelessNetWith2DHCP": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.dhcp.WirelessNetWithDHCP": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.diffserv.onedomain.DiffservNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.diffserv.onedomain.DSQueue1": {
  "CALL": [
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::pullPacket",
    "info": "pullPacket"
   }
  ]
 },
 "inet.examples.diffserv.onedomain.DSQueue2": {
  "CALL": [
   {
    "call to": "inet.queueing.scheduler.WrrScheduler",
    "function": "inet::queueing::WrrScheduler::pullPacket",
    "info": "pullPacket"
   }
  ]
 },
 "inet.examples.diffserv.simple_.DiffservNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.basic.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.snake.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.square_stub.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.square_stub_mesh.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.testing_scenario6.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.testing_scenario_ds.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.testing_scenario.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.two_node6.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.eigrp.two_node.EigrpTestNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.arptest2.ARPTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.arptest.ARPTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.BusLAN": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.HubLAN": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.LargeNet": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.MixedLAN": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.SwitchedDuplexLAN": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.SwitchedLAN": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.lans.TwoHosts": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ethernet.vlan.VlanExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.virtual.VirtualInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.geometry.ObstacleIntersectionTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ieee8021as.NetworkDaisyChain": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ieee8021as.NetworkWithCrossTraffic": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ieee8021d.LargeNet": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ieee8021d.SwitchNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.ber.ber": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.broadcast.UDPBroadcastNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.bulktransfer.BulkTransfer": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.configurator.SimpleConfiguratorNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.dctcp.DcTcpIncast": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.flatnet.FlatNet": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.hierarchical99.Hierarchical99": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.hierarchical.Hierarchical": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.igmp.Network": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.ipv4hook.Ipv4hook": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.ipv4largenet.IPv4LargeNet": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.kidsnw1.KIDSNw1": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.multicast.MulticastNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.nclients.NClients2": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.nclients.NClients": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.netperfmeter.REDQueue": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.examples.inet.netperfmeter.testNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.pcaprecorder.PcapRecorderTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.redmarker.RedMarkerNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.routerperf.RouterPerfNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.shutdownrestart.NClients": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.tcpapp.TcpAppExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.tcpclientserver.ClientServer": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.tcp_eth_reconnect.ClientServerWithSM": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.tcp_ppp_reconnect.ClientServerWithSM": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.tcpwindowscale.tcpwindowscale": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.tunnel.Tunnel": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.tun.TunInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.udpapp.UdpAppExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.udpburst.UDPBurst": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.inet.udpclientserver.UdpClientServer": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.internetcloud.cloudandhosts.CloudAndHosts": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.internetcloud.cloudandrouters.CloudAndRouters": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.internetcloud.earthcloud.EarthCloud": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.demonetworketh.DemoNetworkEth": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.ipv6bulk.BulkTransfer6": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.ipv6nclients.NClientsEth": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.ipv6nclients.NClientsEthPpp": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.ipv6nclients.NClientsPPP": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.nclients.NClientsEth": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ipv6.nclients.NClientsPPP": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.manetrouting.dsdv.DsdvNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.manetrouting.dymo.DYMONetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.manetrouting.gpsr.GPSRNetworkManual": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.manetrouting.gpsr.GPSRNetworkRandom": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.manetrouting.multiradio.MultiRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mobileipv6.mIPv6Network": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.ldp.LDPTEST": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.net37.R37": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.testte_failure2.RSVPTE4": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.testte_failure.RSVPTE4": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.testte_reroute.RSVPTE4": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.testte_routing.RSVPTE4": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.mpls.testte_tunnel.RSVPTE4": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.neighborcache.NeighborCacheTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.objectcache.ObjectCacheTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.areas.OSPF_AreaTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.areatests.OSPF_BackboneAndOneStubTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.areatests.OSPF_BackboneAndTwoStubsTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.areatests.OSPF_BackboneTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.areatests.OSPF_mininet": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.backbone.Backbone": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.dynamictest.DynamicTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.fulltest.OSPF_RFC2328_Fig6": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv2.simpletest.SimpleTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.multiple_areas_FINAL.multiple_areas2": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.small.small": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.v3_2_routers.v3_2_routers": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.v3_3_areas.v3_3_areas": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.v3_4_routers_2_areas.v3_4_routers_2_areas": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.v3_mesh.v3_mesh": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.ospfv3.v3_square_2_areas.v3_square_2_areas": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.pim.dm.assert.Network": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.pim.dm.basic.pimDMFinal": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.pim.iptv.Network": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.pim.sm.basic.PIM_SM_Network": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rip.dynamictest.DynamicTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rip.infinitycount.RIPInfinityCountTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rip.mixednetwork.MixedNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rip.simpletest.SimpleTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rtp.multicast1.RTPMulticast1": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rtp.unicast1.RTPUnicast1": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rtp.unicast2.RTPUnicast2": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.rtp.unicast.RTPNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.sctp.cmttest.multihomed": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.sctp.multihomed.multi": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.sctp.nclients.NClients": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.timing.TimingExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.voipstream.VoIPStreamLargeNet.VoIPStreamLargeNet": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.voipstream.VoIPStreamTest.VoIPStreamTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.voipstream.VoIPStreamTrafficTest.VoIPStreamTrafficTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.voip.Voip": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.antenna.AntennaDirectionalSelectivityExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.configurator.ComplexConfiguratorNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.corruptionmode.CorruptionModeExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.csmaca.CsmaCaInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.crosstalk.Crosstalk": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.dynamic.DynamicRadioNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.errorrate.ErrorRateTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.filtering.FilteringExampleNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.handover.HandoverNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.hiddennode.HiddenNode": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.hosttohost.Throughput": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.ieee80211levelofdetail.Ieee80211LevelofDetailShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.lan80211ac.Lan80211ac": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.lan80211.Lan80211": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.layered80211.Layered80211": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.layeredapsk.LayeredApsk": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.mactest.MacTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.multiradio.MultiRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.nic.TestNic": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.bmac.BMacInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.lmac.LMacInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.xmac.XMacInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.obstacle.ObstacleTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.power.PowerNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.qos.QosThroughput": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.ratecontrol.RateControlTest": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.scaling.TestRadioScaling": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.shortcut.ShortcutMacExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.shortcut.ShortcutInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.shortcut.ShortcutRadioExample": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.synchronized.Synchronized": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.testnewmac.Throughput": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.throughput.Throughput": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.examples.wireless.wiredandwirelesshostswithap.WiredAndWirelessHostsWithAP": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.linklayer.acking.AckingMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::acked",
    "info": "acked"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::receiveSignal",
    "info": "linkBroken"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::AckingMacHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::AckingMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::AckingMacHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "link-break",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.acking.AckingWirelessInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.bmac.BMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::BMacControlFrame"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::BMacDataFrameHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::BMacDataFrameHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::BMacHeaderBase"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::BMacDataFrameHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::Packet",
    "kind": "192 (inet::BMacType::BMAC_DATA)",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ],
    "msgname": "pingNN",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "196 (inet::BMacType::BMAC_START_BMAC)",
    "ctrl": "",
    "tags": [],
    "msgname": "start_bmac",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "197 (inet::BMacType::BMAC_WAKE_UP)",
    "ctrl": "",
    "tags": [],
    "msgname": "wakeup",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "199 (inet::BMacType::BMAC_CCA_TIMEOUT)",
    "ctrl": "",
    "tags": [],
    "msgname": "cca_timeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "201 (inet::BMacType::BMAC_SEND_PREAMBLE)",
    "ctrl": "",
    "tags": [],
    "msgname": "send_preamble",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "202 (inet::BMacType::BMAC_STOP_PREAMBLES)",
    "ctrl": "",
    "tags": [],
    "msgname": "stop_preambles",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "203 (inet::BMacType::BMAC_DATA_TX_OVER)",
    "ctrl": "",
    "tags": [],
    "msgname": "data_tx_over",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "204 (inet::BMacType::BMAC_DATA_TIMEOUT)",
    "ctrl": "",
    "tags": [],
    "msgname": "data_timeout",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.bmac.BMacInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.common.ExampleQosClassifier": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
    "info": "handleRegisterService"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::UdpHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::UserPriorityReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.common.OmittedIeee8021dQosClassifier": {
  "CALL": [
   {
    "call to": "inet.linklayer.bmac.BMacInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.lmac.LMacInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.shortcut.ShortcutInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.xmac.XMacInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.linklayer.common.QosClassifier": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
    "info": "handleRegisterService"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::UdpHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::UserPriorityReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.common.WirelessInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.configurator.L2NodeConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::Ieee8021dInterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ieee8021dInterfaceData"
   }
  ]
 },
 "inet.linklayer.configurator.MacForwardingTableConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
    "info": "findInterfaceByNodeOutputGateId"
   }
  ]
 },
 "inet.linklayer.csmaca.CsmaCaInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.csmaca.CsmaCaMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::receiveSignal",
    "info": "linkBroken"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::CsmaCaMacTrailer"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::CsmaCaMacAckHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::CsmaCaMacDataHeader"
   },
   {
    "packetAction": "peekAllAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::CsmaCaMacTrailer"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::CsmaCaMacHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::CsmaCaMacDataHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "AckTimeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "Backoff",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "DIFS",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "SIFS",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::UserPriorityReq"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ethernet.basic.EthernetCsmaMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::refreshConnection",
    "info": "refreshConnection"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetQosQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "phys$i",
    "msg": "inet::physicallayer::EthernetFilledIfgSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "phys$i",
    "msg": "inet::physicallayer::EthernetJamSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "phys$i",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "phys$o",
    "msg": "inet::physicallayer::EthernetFilledIfgSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "phys$o",
    "msg": "inet::physicallayer::EthernetJamSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "phys$o",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetPadding"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   },
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   },
   {
    "packetAction": "removeAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "trimBack",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "100",
    "ctrl": "",
    "tags": [],
    "msgname": "EndIFG",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "101",
    "ctrl": "",
    "tags": [],
    "msgname": "EndReception",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "102",
    "ctrl": "",
    "tags": [],
    "msgname": "EndBackoff",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "103",
    "ctrl": "",
    "tags": [],
    "msgname": "EndTransmission",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "104",
    "ctrl": "",
    "tags": [],
    "msgname": "EndJamming",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ethernet.basic.EthernetEncapsulation": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
    "function": "inet::Ieee8022Llc::handleRegisterService",
    "info": "handleRegisterService"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   }
  ]
 },
 "inet.linklayer.ethernet.basic.EthernetMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::refreshConnection",
    "info": "refreshConnection"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetQosQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.RedDropperQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "phys$i",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "phys$o",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetPadding"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   },
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   },
   {
    "packetAction": "removeAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::EthernetMacHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTagsWhereAbsent",
    "tagType": "inet::ResidenceTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::ResidenceTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::ResidenceTimeTag"
   },
   {
    "tagAction": "removeTagsWherePresent",
    "tagType": "inet::ResidenceTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "100",
    "ctrl": "",
    "tags": [],
    "msgname": "EndIFG",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "103",
    "ctrl": "",
    "tags": [],
    "msgname": "EndTransmission",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ethernet.common.EthernetFrameClassifier": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.common.EthernetFrameClassifier",
    "function": "inet::EthernetFrameClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EthernetMacHeader"
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ]
 },
 "inet.linklayer.ethernet.common.EthernetQosQueue": {
  "CALL": [
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::pullPacket",
    "info": "pullPacket"
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.linklayer.ethernet.common.EthernetQueue": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EthernetMacHeader"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.linklayer.ethernet.common.MacForwardingTable": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::addMulticastAddressForwardingInterface",
    "info": "addMulticastAddressForwardingInterface"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::setUnicastAddressForwardingInterface",
    "info": "setUnicastAddressForwardingInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ]
 },
 "inet.linklayer.ethernet.common.MacRelayUnit": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
    "info": "handleRegisterAnyProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyService",
    "info": "handleRegisterAnyService"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
    "info": "getUnicastAddressForwardingInterface"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
    "info": "learnUnicastAddressForwardingInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ethernet.common.PacketDirectionReverser": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
    "info": "handleRegisterAnyProtocol"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DropEligibleReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PcpReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::UserPriorityReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::VlanReq"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::DirectionTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::DropEligibleInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::EligibilityTimeTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PcpInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SequenceNumberInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::StreamInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanInd"
   }
  ]
 },
 "inet.linklayer.ethernet.common.RelayInterfaceLearner": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
    "info": "learnUnicastAddressForwardingInterface"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   }
  ]
 },
 "inet.linklayer.ethernet.common.RelayInterfaceSelector": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
    "info": "getUnicastAddressForwardingInterface"
   },
   {
    "call to": "inet.linklayer.vlan.VlanReqMapper",
    "function": "inet::VlanReqMapper::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   }
  ]
 },
 "inet.linklayer.ethernet.EthernetInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceCreated"
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.ethernet.LayeredEthernetInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.configurator.L2NodeConfigurator",
    "function": "inet::L2NodeConfigurator::receiveSignal",
    "info": "interfaceCreated"
   },
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.queueing.flow.FlowMeasurementStarter",
    "function": "inet::queueing::FlowMeasurementStarter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.ethernet.modular.EthernetFcsChecker": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker",
    "function": "inet::EthernetMacHeaderChecker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.flow.FlowMeasurementRecorder",
    "function": "inet::queueing::FlowMeasurementRecorder::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::EthernetFcs"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ethernet.modular.EthernetFcsInserter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EthernetMacHeader"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   }
  ]
 },
 "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
    "function": "inet::EthernetMacHeaderInserter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
    "function": "inet::Ieee8022Llc::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.protocolelement.common.PaddingInserter",
    "function": "inet::PaddingInserter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EthernetMacHeader"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   }
  ]
 },
 "inet.linklayer.ieee80211.Ieee80211Interface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceCreated"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee802EpdHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ieee802EpdHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ieee80211::LlcProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee8022LlcHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee8022LlcSnapHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ieee8022LlcHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ieee80211::LlcProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::Ieee802SapInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ieee802SapInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy": {
  "PACKET": [
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.channelaccess.Dcaf": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::mediumStateChanged",
    "info": "medium BUSY"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::mediumStateChanged",
    "info": "medium FREE"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::startContention",
    "info": "startContention"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::channelGranted",
    "info": "channelGranted"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.channelaccess.Edcaf": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::mediumStateChanged",
    "info": "medium FREE"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::startContention",
    "info": "startContention"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::channelGranted",
    "info": "channelGranted"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.contention.Contention": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
    "function": "inet::ieee80211::Dcaf::channelAccessGranted",
    "info": "channelAccessGranted"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
    "function": "inet::ieee80211::Edcaf::channelAccessGranted",
    "info": "channelAccessGranted"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "channelGranted",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "startTx",
    "context": ""
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
    "function": "inet::ieee80211::Dcaf::incrementCw",
    "info": "incrementCw"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
    "function": "inet::ieee80211::Dcaf::releaseChannel",
    "info": "releaseChannel"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
    "function": "inet::ieee80211::Dcaf::requestChannel",
    "info": "requestChannel"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
    "function": "inet::ieee80211::Dcaf::resetCw",
    "info": "resetCw"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::frameSequenceFinished",
    "info": "frameSequenceFinished"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::originatorProcessFailedFrame",
    "info": "originatorProcessFailedFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::originatorProcessReceivedFrame",
    "info": "originatorProcessReceivedFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::originatorProcessRtsProtectionFailed",
    "info": "originatorProcessRtsProtectionFailed"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::originatorProcessTransmittedFrame",
    "info": "originatorProcessTransmittedFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::scheduleStartRxTimer",
    "info": "scheduleStartRxTimer"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::transmitControlResponseFrame",
    "info": "transmitControlResponseFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::transmitFrame",
    "info": "transmitFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::sendUpFrame",
    "info": "sendUpFrame(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService",
    "function": "inet::ieee80211::OriginatorMacDataService::extractFramesToTransmit",
    "info": "extractFramesToTransmit"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.InProgressFrames",
    "function": "inet::ieee80211::InProgressFrames::clearDroppedFrames",
    "info": "clearDroppedFrames"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl",
    "function": "inet::ieee80211::AarfRateControl::getRate",
    "info": "getRate"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService",
    "function": "inet::ieee80211::RecipientMacDataService::controlFrameReceived",
    "info": "controlFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService",
    "function": "inet::ieee80211::RecipientMacDataService::dataFrameReceived",
    "info": "dataFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService",
    "function": "inet::ieee80211::RecipientMacDataService::managementFrameReceived",
    "info": "managementFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Tx",
    "function": "inet::ieee80211::Tx::transmitFrame",
    "info": "transmitFrame(\"%s\")"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::receiveSignal",
    "info": "linkBroken"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::receiveSignal",
    "info": "linkBroken"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::receiveSignal",
    "info": "linkBroken"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "startRxTimeout",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
    "function": "inet::ieee80211::Edcaf::incrementCw",
    "info": "incrementCw"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
    "function": "inet::ieee80211::Edcaf::releaseChannel",
    "info": "releaseChannel"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
    "function": "inet::ieee80211::Edcaf::requestChannel",
    "info": "requestChannel"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
    "function": "inet::ieee80211::Edcaf::resetCw",
    "info": "resetCw"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::frameSequenceFinished",
    "info": "frameSequenceFinished"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::originatorProcessFailedFrame",
    "info": "originatorProcessFailedFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::originatorProcessReceivedFrame",
    "info": "originatorProcessReceivedFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::originatorProcessRtsProtectionFailed",
    "info": "originatorProcessRtsProtectionFailed"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::originatorProcessTransmittedFrame",
    "info": "originatorProcessTransmittedFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::processMgmtFrame",
    "info": "processMgmtFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::processUpperFrame",
    "info": "processUpperFrame(%s)"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::scheduleStartRxTimer",
    "info": "scheduleStartRxTimer"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::transmitControlResponseFrame",
    "info": "transmitControlResponseFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::transmitFrame",
    "info": "transmitFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::sendUpFrame",
    "info": "sendUpFrame(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService",
    "function": "inet::ieee80211::OriginatorQosMacDataService::extractFramesToTransmit",
    "info": "extractFramesToTransmit"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.TxopProcedure",
    "function": "inet::ieee80211::TxopProcedure::endTxop",
    "info": "endTxop"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.TxopProcedure",
    "function": "inet::ieee80211::TxopProcedure::startTxop",
    "info": "startTxop"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.InProgressFrames",
    "function": "inet::ieee80211::InProgressFrames::clearDroppedFrames",
    "info": "clearDroppedFrames"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService",
    "function": "inet::ieee80211::RecipientQosMacDataService::controlFrameReceived",
    "info": "controlFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService",
    "function": "inet::ieee80211::RecipientQosMacDataService::dataFrameReceived",
    "info": "dataFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService",
    "function": "inet::ieee80211::RecipientQosMacDataService::managementFrameReceived",
    "info": "managementFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Tx",
    "function": "inet::ieee80211::Tx::transmitFrame",
    "info": "transmitFrame(\"%s\")"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211BasicBlockAckReq"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211BlockAckReq"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "startRxTimeout",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.Ds": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::processUpperFrame",
    "info": "processUpperFrame(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::sendUp",
    "info": "sendUp(\"%s\")"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy": {
  "PACKET": [
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.Ieee80211Mac": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.blockack.OriginatorBlockAckAgreementPolicy",
    "function": "inet::ieee80211::OriginatorBlockAckAgreementPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
    "function": "inet::ieee80211::Dcaf::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
    "function": "inet::ieee80211::Edcaf::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::corruptedFrameReceived",
    "info": "corruptedFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::processLowerFrame",
    "info": "processLowerFrame(%s)"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::processUpperFrame",
    "info": "processUpperFrame(%s)"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::corruptedFrameReceived",
    "info": "corruptedFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::processLowerFrame",
    "info": "processLowerFrame(%s)"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::processUpperFrame",
    "info": "processUpperFrame(%s)"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ds",
    "function": "inet::ieee80211::Ds::processDataFrame",
    "info": "processDataFrame"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::processLowerFrame",
    "info": "processLowerFrame(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::processUpperFrame",
    "info": "processUpperFrame(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorAckPolicy",
    "function": "inet::ieee80211::OriginatorAckPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorQosAckPolicy",
    "function": "inet::ieee80211::OriginatorQosAckPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.QosRtsPolicy",
    "function": "inet::ieee80211::QosRtsPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.RtsPolicy",
    "function": "inet::ieee80211::RtsPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.originator.TxopProcedure",
    "function": "inet::ieee80211::TxopProcedure::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.protectionmechanism.OriginatorProtectionMechanism",
    "function": "inet::ieee80211::OriginatorProtectionMechanism::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.protectionmechanism.SingleProtectionMechanism",
    "function": "inet::ieee80211::SingleProtectionMechanism::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl",
    "function": "inet::ieee80211::AarfRateControl::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.rateselection.QosRateSelection",
    "function": "inet::ieee80211::QosRateSelection::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.rateselection.RateSelection",
    "function": "inet::ieee80211::RateSelection::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.CtsPolicy",
    "function": "inet::ieee80211::CtsPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.QosCtsPolicy",
    "function": "inet::ieee80211::QosCtsPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientAckPolicy",
    "function": "inet::ieee80211::RecipientAckPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosAckPolicy",
    "function": "inet::ieee80211::RecipientQosAckPolicy::receiveSignal",
    "info": "modesetChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Rx",
    "function": "inet::ieee80211::Rx::lowerFrameReceived",
    "info": "lowerFrameReceived(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Rx",
    "function": "inet::ieee80211::Rx::receivedSignalPartChanged",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Rx",
    "function": "inet::ieee80211::Rx::receptionStateChanged",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Rx",
    "function": "inet::ieee80211::Rx::transmissionStateChanged",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Tx",
    "function": "inet::ieee80211::Tx::radioTransmissionFinished",
    "info": "radioTransmissionFinished"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
    "function": "inet::physicallayer::Ieee80211OfdmRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
    "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
    "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
    "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
    "function": "inet::physicallayer::Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "mgmtIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "mgmtIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
    "tags": []
   },
   {
    "gate": "mgmtOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::UserPriorityInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::UserPriorityReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ieee80211SubtypeReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy",
    "function": "inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes",
    "info": "computeFragmentSizes"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy",
    "function": "inet::ieee80211::BasicMsduAggregationPolicy::computeAggregateFrames",
    "info": "computeAggregateFrames"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy",
    "function": "inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes",
    "info": "computeFragmentSizes"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
    "function": "inet::queueing::PacketQueue::removePacket",
    "info": "removePacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MsduSubframeHeader"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.queue.InProgressFrames": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.queue.PendingQueue": {
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService": {
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService": {
  "PACKET": [
   {
    "packetAction": "hasAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MsduSubframeHeader"
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.Rx": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::corruptedFrameReceived",
    "info": "corruptedFrameReceived"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::mediumStateChanged",
    "info": "medium BUSY"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
    "function": "inet::ieee80211::Contention::mediumStateChanged",
    "info": "medium FREE"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "NAV",
    "context": ""
   }
  ]
 },
 "inet.linklayer.ieee80211.mac.Tx": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
    "function": "inet::ieee80211::Dcf::transmissionComplete",
    "info": "transmissionComplete"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
    "function": "inet::ieee80211::Hcf::transmissionComplete",
    "info": "transmissionComplete"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::sendDownFrame",
    "info": "sendDownFrame(\"%s\")"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Rx",
    "function": "inet::ieee80211::Rx::frameTransmitted",
    "info": "frameTransmitted"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AckFrame"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211BasicBlockAck"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211BasicBlockAckReq"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211CtsFrame"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211DataHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
   },
   {
    "packetAction": "peekAllAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   },
   {
    "packetAction": "removeAtBack",
    "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ieee80211::Ieee80211MacHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "endIFS",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   }
  ]
 },
 "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta": {
  "INPUT": [
   {
    "gate": "mgmtIn",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateConfirm",
    "tags": []
   },
   {
    "gate": "mgmtIn",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateConfirm",
    "tags": []
   },
   {
    "gate": "mgmtIn",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_ScanConfirm",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "mgmtOut",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateRequest",
    "tags": []
   },
   {
    "gate": "mgmtOut",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateRequest",
    "tags": []
   },
   {
    "gate": "mgmtOut",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_ScanRequest",
    "tags": []
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "startUp",
    "context": ""
   }
  ]
 },
 "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp": {
  "INPUT": [
   {
    "gate": "macIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "macOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211AssociationResponseFrame"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211BeaconFrame"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211ProbeResponseFrame"
   },
   {
    "packetAction": "peekAt",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::ieee80211::Ieee80211ProbeRequestFrame"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "beaconTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ieee80211SubtypeReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   }
  ]
 },
 "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta": {
  "CALL": [
   {
    "call to": "inet.applications.dhcp.DhcpClient",
    "function": "inet::DhcpClient::receiveSignal",
    "info": "l2Associated"
   },
   {
    "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta",
    "function": "inet::ieee80211::Ieee80211AgentSta::receiveSignal",
    "info": "l2BeaconLost"
   }
  ],
  "INPUT": [
   {
    "gate": "agentIn",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateRequest",
    "tags": []
   },
   {
    "gate": "agentIn",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateRequest",
    "tags": []
   },
   {
    "gate": "agentIn",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_ScanRequest",
    "tags": []
   },
   {
    "gate": "macIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "agentOut",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateConfirm",
    "tags": []
   },
   {
    "gate": "agentOut",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateConfirm",
    "tags": []
   },
   {
    "gate": "agentOut",
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::ieee80211::Ieee80211Prim_ScanConfirm",
    "tags": []
   },
   {
    "gate": "macOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "macOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211AssociationRequestFrame"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ieee80211::Ieee80211ProbeRequestFrame"
   },
   {
    "packetAction": "peekAt",
    "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::ieee80211::Ieee80211AssociationResponseFrame"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::ieee80211::Ieee80211BeaconFrame"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::ieee80211::Ieee80211ProbeResponseFrame"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "sendProbe",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "4",
    "ctrl": "",
    "tags": [],
    "msgname": "minChannelTime",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "maxChannelTime",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "6",
    "ctrl": "",
    "tags": [],
    "msgname": "beaconTimeout",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ieee80211SubtypeReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SignalPowerInd"
   }
  ]
 },
 "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtStaSimplified": {
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.linklayer.ieee80211.portal.Ieee80211Portal": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "eraseAtFront",
    "chunkType": ""
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee8022LlcSnapHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ieee8022LlcHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   }
  ]
 },
 "inet.linklayer.ieee802154.Ieee802154Mac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee802154MacHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ieee802154MacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ieee802154MacHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer-backoff",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer-cca",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.ieee802154.Ieee802154NarrowbandMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
    "function": "inet::physicallayer::FlatRadioBase::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
    "function": "inet::physicallayer::FlatRadioBase::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee802154MacHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ieee802154MacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ieee802154MacHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer-backoff",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer-cca",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer-rxAck",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer-sifs",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ieee8021as.Gptp": {
  "CALL": [
   {
    "call to": "inet.clock.model.SettableClock",
    "function": "inet::SettableClock::setClockTime",
    "info": "setClockTime"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::GptpFollowUp"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::GptpPdelayReq"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::GptpPdelayResp"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::GptpPdelayRespFollowUp"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::GptpSync"
   },
   {
    "packetAction": "peekAt",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "peekAt",
    "chunkType": "inet::GptpBase"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::GptpBase"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "103 (inet::GptpSelfMsgKind::GPTP_SELF_MSG_SYNC)",
    "ctrl": "",
    "tags": [],
    "msgname": "selfMsgSync",
    "context": ""
   },
   {
    "msg": "inet::ClockEvent",
    "kind": "105 (inet::GptpSelfMsgKind::GPTP_SELF_MSG_PDELAY_REQ)",
    "ctrl": "",
    "tags": [],
    "msgname": "selfMsgPdelay",
    "context": ""
   },
   {
    "msg": "inet::GptpReqAnswerEvent",
    "kind": "101 (inet::GptpSelfMsgKind::GPTP_SELF_REQ_ANSWER_KIND)",
    "ctrl": "",
    "tags": [],
    "msgname": "selfMsgPdelayResp",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::GptpIngressTimeInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::GptpIngressTimeInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ieee8021d.relay.Ieee8021dRelay": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
    "info": "handleRegisterAnyProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyService",
    "info": "handleRegisterAnyService"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::getMulticastAddressForwardingInterfaces",
    "info": "getMulticastAddressForwardingInterfaces"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
    "info": "getUnicastAddressForwardingInterface"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
    "info": "learnUnicastAddressForwardingInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ieee8021dInterfaceData"
   }
  ]
 },
 "inet.linklayer.ieee8021d.rstp.Rstp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::removeForwardingInterface",
    "info": "removeForwardingInterface"
   },
   {
    "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
    "function": "inet::MacForwardingTable::replaceForwardingInterface",
    "info": "replaceForwardingInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "relayIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "relayOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BpduCfg"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::BpduCfg"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "itshellotime",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "upgrade",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ieee8021dInterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ieee8021dInterfaceData"
   }
  ]
 },
 "inet.linklayer.ieee8021d.stp.Stp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ],
  "INPUT": [
   {
    "gate": "relayIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "relayOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BpduCfg"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BpduTcn"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::BpduBase"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "STP_TICK",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ieee8021dInterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ieee8021dInterfaceData"
   }
  ]
 },
 "inet.linklayer.ieee8021d.tester.StpTester": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
    "info": "findInterfaceByNodeOutputGateId"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "checktime",
    "context": ""
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ieee8021dInterfaceData"
   }
  ]
 },
 "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor",
    "function": "inet::Ieee8021qSocketCommandProcessor::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
    "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::Ieee8021qBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanReq"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::SocketInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanInd"
   }
  ]
 },
 "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor",
    "function": "inet::Ieee8021qSocketPacketProcessor::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ieee8021qTagEpdHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ieee8021qTagEpdHeader"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DropEligibleInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PcpInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::VlanInd"
   }
  ]
 },
 "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
    "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee8021qTagEpdHeader"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanReq"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DropEligibleInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PcpInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::UserPriorityInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::VlanInd"
   },
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::EncapsulationProtocolReq"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DropEligibleReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PcpReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::UserPriorityReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::VlanReq"
   }
  ]
 },
 "inet.linklayer.ieee8021r.Ieee8021rTagEpdHeaderChecker": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ]
 },
 "inet.linklayer.ieee8021r.Ieee8021rTagEpdHeaderInserter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   }
  ]
 },
 "inet.linklayer.ieee8022.Ieee8022Llc": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
    "function": "inet::EthernetEncapsulation::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
    "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ieee8022LlcHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ieee8022LlcHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::Ieee802SapInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ieee802SapInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ieee802SapReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.lmac.LMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::LMacControlFrame"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::LMacDataFrameHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::LMacControlFrame"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::LMacDataFrameHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::LMacHeaderBase"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::LMacDataFrameHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::LMacDataFrameHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "168 (inet::LMacType::LMAC_TIMEOUT)",
    "ctrl": "",
    "tags": [],
    "msgname": "timeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "169 (inet::LMacType::LMAC_WAKEUP)",
    "ctrl": "",
    "tags": [],
    "msgname": "wakeup",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "170 (inet::LMacType::LMAC_SEND_DATA)",
    "ctrl": "",
    "tags": [],
    "msgname": "sendData",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "171 (inet::LMacType::LMAC_SETUP_PHASE_END)",
    "ctrl": "",
    "tags": [],
    "msgname": "setup phase",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "172 (inet::LMacType::LMAC_CHECK_CHANNEL)",
    "ctrl": "",
    "tags": [],
    "msgname": "checkchannel",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "175 (inet::LMacType::LMAC_START_LMAC)",
    "ctrl": "",
    "tags": [],
    "msgname": "start_lmac",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "176 (inet::LMacType::LMAC_SEND_CONTROL)",
    "ctrl": "",
    "tags": [],
    "msgname": "send_control",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.lmac.LMacInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.loopback.Loopback": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.loopback.LoopbackInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceCreated"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.ppp.Ppp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.examples.diffserv.onedomain.DSQueue1",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.examples.diffserv.onedomain.DSQueue2",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.examples.inet.netperfmeter.REDQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::refreshOutGateConnection",
    "info": "refreshOutGateConnection"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.diffserv.DiffservQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "phys$i",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "phys$o",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::PppTrailer"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PppHeader"
   },
   {
    "packetAction": "peekAtBack",
    "chunkType": "inet::PppTrailer"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PppHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::PppTrailer"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::PppHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "pppEndTxEvent",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.ppp.PppInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceCreated"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.shortcut.ShortcutInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.shortcut.ShortcutMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "peerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ShortcutMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ShortcutMacHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.tun.Tun": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "4 (inet::TunCommandCode::TUN_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1 (inet::TunCommandCode::TUN_C_OPEN)",
    "ctrl": "inet::TunOpenCommand",
    "tags": [
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.linklayer.tun.TunInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.virtual.VirtualInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.linklayer.virtual.VirtualTunnel",
    "function": "inet::VirtualTunnel::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::SocketInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.linklayer.virtual.VirtualTunnel": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::Ieee8021qBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::SocketInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::VlanReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::SocketInd"
   }
  ]
 },
 "inet.linklayer.vlan.VlanIndFilter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
    "info": "handleRegisterAnyProtocol"
   },
   {
    "call to": "inet.linklayer.ethernet.common.RelayInterfaceLearner",
    "function": "inet::RelayInterfaceLearner::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanInd"
   }
  ]
 },
 "inet.linklayer.vlan.VlanReqFilter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanReq"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanReq"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanReq"
   }
  ]
 },
 "inet.linklayer.vlan.VlanReqMapper": {
  "CALL": [
   {
    "call to": "inet.linklayer.vlan.VlanReqFilter",
    "function": "inet::VlanReqFilter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanReq"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::VlanReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::VlanReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::VlanReq"
   }
  ]
 },
 "inet.linklayer.xmac.XMac": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::XMacDataFrameHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::XMacControlFrame"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::XMacDataFrameHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::XMacHeaderBase"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::XMacDataFrameHeader"
   }
  ],
  "PULL_IN": [
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::Packet",
    "kind": "192 (inet::XMacTypes::XMAC_DATA)",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ],
    "msgname": "pingNN-reply",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "196 (inet::XMacTypes::XMAC_START_XMAC)",
    "ctrl": "",
    "tags": [],
    "msgname": "start_xmac",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "197 (inet::XMacTypes::XMAC_WAKE_UP)",
    "ctrl": "",
    "tags": [],
    "msgname": "wakeup",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "199 (inet::XMacTypes::XMAC_CCA_TIMEOUT)",
    "ctrl": "",
    "tags": [],
    "msgname": "cca_timeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "200 (inet::XMacTypes::XMAC_ACK_TX_OVER)",
    "ctrl": "",
    "tags": [],
    "msgname": "ack_tx_over",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "202 (inet::XMacTypes::XMAC_STOP_PREAMBLES)",
    "ctrl": "",
    "tags": [],
    "msgname": "stop_preambles",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "203 (inet::XMacTypes::XMAC_DATA_TX_OVER)",
    "ctrl": "",
    "tags": [],
    "msgname": "data_tx_over",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "204 (inet::XMacTypes::XMAC_DATA_TIMEOUT)",
    "ctrl": "",
    "tags": [],
    "msgname": "data_timeout",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "205 (inet::XMacTypes::SWITCH_PREAMBLE_PHASE)",
    "ctrl": "",
    "tags": [],
    "msgname": "switch_preamble_phase",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "206 (inet::XMacTypes::DELAY_FOR_ACK_WITHIN_REMOTE_RX)",
    "ctrl": "",
    "tags": [],
    "msgname": "delay_for_ack_within_remote_rx",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "207 (inet::XMacTypes::XMAC_SWITCHING_FINISHED)",
    "ctrl": "",
    "tags": [],
    "msgname": "switching_done",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.linklayer.xmac.XMacInterface": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterInterface",
    "info": "handleRegisterInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   }
  ]
 },
 "inet.mobility.group.MoBanCoordinator": {
  "CALL": [
   {
    "call to": "inet.mobility.group.MoBanLocal",
    "function": "inet::MoBanLocal::setMoBANParameters",
    "info": "setMoBANParameters"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.group.MoBanLocal": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.AnsimMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.AttachedMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ]
 },
 "inet.mobility.single.BonnMotionMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.ChiangMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.CircleMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.AttachedMobility",
    "function": "inet::AttachedMobility::receiveSignal",
    "info": "mobilityStateChanged"
   },
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.FacingMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ]
 },
 "inet.mobility.single.GaussMarkovMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.LinearMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.AttachedMobility",
    "function": "inet::AttachedMobility::receiveSignal",
    "info": "mobilityStateChanged"
   },
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.MassMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.RandomWaypointMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.RectangleMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.SuperpositioningMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.AttachedMobility",
    "function": "inet::AttachedMobility::receiveSignal",
    "info": "mobilityStateChanged"
   },
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ]
 },
 "inet.mobility.single.TractorMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.TurtleMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.AttachedMobility",
    "function": "inet::AttachedMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.single.VehicleMobility": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "move",
    "context": ""
   }
  ]
 },
 "inet.mobility.static.StaticConcentricMobility": {
  "CALL": [
   {
    "call to": "inet.mobility.single.SuperpositioningMobility",
    "function": "inet::SuperpositioningMobility::receiveSignal",
    "info": "mobilityStateChanged"
   }
  ]
 },
 "inet.networklayer.arp.ipv4.Arp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::receiveSignal",
    "info": "arpResolutionCompleted"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::receiveSignal",
    "info": "arpResolutionFailed"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   }
  ],
  "INPUT": [
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ifIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ifOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ifOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ArpPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ArpPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ARP timeout",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.arp.ipv4.GlobalArp": {
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.networklayer.common.EchoProtocol": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EchoPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EchoPacket"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EchoPacket"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::NetworkProtocolInd"
   }
  ]
 },
 "inet.networklayer.common.InterfaceTable": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee8021d.rstp.Rstp",
    "function": "inet::Rstp::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.GlobalArp",
    "function": "inet::GlobalArp::receiveSignal",
    "info": "interfaceIpv4ConfigChanged"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.GlobalArp",
    "function": "inet::GlobalArp::receiveSignal",
    "info": "interfaceIpv6ConfigChanged"
   },
   {
    "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
    "function": "inet::Ipv4NodeConfigurator::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::receiveSignal",
    "info": "interfaceIpv4ConfigChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::receiveSignal",
    "info": "interfaceIpv6ConfigChanged"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceIpv4ConfigChanged"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::removeAllPackets",
    "info": "removeAllPackets"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
    "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
    "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
    "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
    "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.routing.ospfv2.Ospfv2",
    "function": "inet::ospfv2::Ospfv2::receiveSignal",
    "info": "interfaceStateChanged"
   },
   {
    "call to": "inet.routing.rip.Rip",
    "function": "inet::Rip::receiveSignal",
    "info": "interfaceStateChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.common.NetfilterInfoHook": {
  "CALL": [
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::unregisterHook",
    "info": "unregisterHook()"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   }
  ]
 },
 "inet.networklayer.configurator.ipv4.HostAutoConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
    "info": "findInterfaceByNodeOutputGateId"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::UnitDiskPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::UnitDiskPhyHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ChannelReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addMulticastRoute",
    "info": "addMulticastRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   }
  ],
  "TAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
    "info": "findInterfaceByNodeOutputGateId"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
    "info": "findInterfaceByNodeOutputGateId"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::addRoute",
    "info": "addRoute(...)"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.networklayer.diffserv.BehaviorAggregateClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.filter.RedDropper",
    "function": "inet::queueing::RedDropper::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.networklayer.diffserv.DiffservQueue": {
  "CALL": [
   {
    "call to": "inet.queueing.filter.RedDropper",
    "function": "inet::queueing::RedDropper::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.networklayer.diffserv.DscpMarker": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertDataAt",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "removeDataAt",
    "chunkType": "inet::Ipv4Header"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::NetworkProtocolInd"
   }
  ]
 },
 "inet.networklayer.diffserv.MultiFieldClassifier": {
  "CALL": [
   {
    "call to": "inet.networklayer.diffserv.DscpMarker",
    "function": "inet::DscpMarker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::EthernetFcs"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ArpPacket"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "defaultOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.diffserv.SingleRateThreeColorMeter": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "greenOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "redOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "yellowOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ]
 },
 "inet.networklayer.diffserv.TokenBucketMeter": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "greenOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "greenOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ]
 },
 "inet.networklayer.flooding.Flooding": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
    "info": "findFirstNonLoopbackInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::L3SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::FloodingHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::FloodingHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::FloodingHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::HopLimitReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.networklayer.icmpv6.Icmpv6": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   }
  ],
  "INPUT": [
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipv6Out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::Icmpv6DestUnreachableMsg"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Icmpv6DestUnreachableMsg"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Icmpv6Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::Icmpv6Header"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::Icmpv6Header"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.icmpv6.Icmpv6",
    "function": "inet::Icmpv6::sendErrorMessage",
    "info": "sendErrorMessage(datagram, type=%d, code=%d)"
   },
   {
    "call to": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
    "function": "inet::Ipv6NeighbourDiscovery::createAndSendNsPacket",
    "info": "createAndSendNsPacket"
   },
   {
    "call to": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
    "function": "inet::Ipv6NeighbourDiscovery::initiateDad",
    "info": "initiateDad"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
    "info": "doLongestPrefixMatch(%s)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipv6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipv6Out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipv6Out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipv6Out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipv6Out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6NeighbourAdvertisement"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6NeighbourSolicitation"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6RouterAdvertisement"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6RouterSolicitation"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Icmpv6Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "assignLinkLocalAddr",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "sendPeriodicRA",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "sendSolicitedRA",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "initiateRTRDIS",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "4",
    "ctrl": "",
    "tags": [],
    "msgname": "dadTimeout",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "processRDTimeout",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "6",
    "ctrl": "",
    "tags": [],
    "msgname": "NUDTimeout",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "7",
    "ctrl": "",
    "tags": [],
    "msgname": "arTimeout",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.networklayer.internetcloud.MatrixCloudDelayer": {
  "CALL": [
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::reinjectQueuedDatagram",
    "info": "reinjectDatagram()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::unregisterHook",
    "info": "unregisterHook()"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "Delay",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceReq"
   }
  ]
 },
 "inet.networklayer.ipv4.Icmp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalBroadcastAddress",
    "info": "isLocalBroadcastAddress(%u.%u.%u.%u)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::TosInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitsChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::IcmpEchoReply"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::IcmpEchoRequest"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ipv4.Igmpv2": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.routing.pim.modes.PimDm",
    "function": "inet::PimDm::receiveSignal",
    "info": "ipv4MulticastGroupRegistered"
   },
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "ipv4MulticastGroupRegistered"
   },
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "ipv4MulticastGroupUnregistered"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::Ipv4OptionsReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Igmpv2Leave"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Igmpv2Query"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Igmpv2Report"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::IgmpMessage"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::IgmpQuery"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Igmpv2Leave"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Igmpv2Report"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "IgmpvN query timer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "IgmpvN group timer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "IgmpvN leave timer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "IgmpvN rexmt timer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ipv4OptionsReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ipv4.Igmpv3": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv3",
    "function": "inet::Igmpv3::receiveSignal",
    "info": "ipv4McastChange"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::Ipv4OptionsReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::Ipv4OptionsReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Igmpv3Query"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Igmpv3Report"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::IgmpMessage"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Igmpv3Query"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Igmpv3Report"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "IgmpvN General Query timer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "IgmpvN Host General Timer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DscpReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::Ipv4OptionsReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ipv4.Ipv4": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.Arp",
    "function": "inet::Arp::resolveL3Address",
    "info": "resolveMACAddress(%s,%s)"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.GlobalArp",
    "function": "inet::GlobalArp::resolveL3Address",
    "info": "resolveL3Address"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstLoopbackInterface",
    "info": "findFirstLoopbackInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstMulticastInterface",
    "info": "findFirstMulticastInterface"
   },
   {
    "call to": "inet.networklayer.common.NetfilterInfoHook",
    "function": "inet::NetfilterInfoHook::datagramForwardHook",
    "info": "datagramForwardHook"
   },
   {
    "call to": "inet.networklayer.common.NetfilterInfoHook",
    "function": "inet::NetfilterInfoHook::datagramLocalInHook",
    "info": "datagramLocalInHook"
   },
   {
    "call to": "inet.networklayer.common.NetfilterInfoHook",
    "function": "inet::NetfilterInfoHook::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.networklayer.common.NetfilterInfoHook",
    "function": "inet::NetfilterInfoHook::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   },
   {
    "call to": "inet.networklayer.common.NetfilterInfoHook",
    "function": "inet::NetfilterInfoHook::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.networklayer.internetcloud.MatrixCloudDelayer",
    "function": "inet::MatrixCloudDelayer::datagramForwardHook",
    "info": "datagramForwardHook"
   },
   {
    "call to": "inet.networklayer.ipv4.Icmp",
    "function": "inet::Icmp::sendErrorMessage",
    "info": "sendErrorMessage(datagram, type=%d, code=%d)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingMulticastRoute",
    "info": "getMulticastRoutesFor(%u.%u.%u.%u, %u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findInterfaceByLocalBroadcastAddress",
    "info": "findInterfaceByLocalBroadcastAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalBroadcastAddress",
    "info": "isLocalBroadcastAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::datagramForwardHook",
    "info": "datagramForwardHook"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.aodv.Aodv",
    "function": "inet::aodv::Aodv::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.routing.pim.modes.PimDm",
    "function": "inet::PimDm::receiveSignal",
    "info": "ipv4DataOnNonrpf"
   },
   {
    "call to": "inet.routing.pim.modes.PimDm",
    "function": "inet::PimDm::receiveSignal",
    "info": "ipv4DataOnRpf"
   },
   {
    "call to": "inet.routing.pim.modes.PimDm",
    "function": "inet::PimDm::receiveSignal",
    "info": "ipv4NewMulticast"
   },
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "ipv4DataOnRpf"
   },
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "ipv4MdataRegister"
   },
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "ipv4NewMulticast"
   },
   {
    "call to": "inet.transportlayer.sctp.SctpCrcInsertion",
    "function": "inet::sctp::SctpCrcInsertion::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   },
   {
    "call to": "inet.transportlayer.tcp_common.TcpCrcInsertionHook",
    "function": "inet::tcp::TcpCrcInsertionHook::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   },
   {
    "call to": "inet.transportlayer.udp.UdpCrcInsertionHook",
    "function": "inet::UdpCrcInsertionHook::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   }
  ],
  "INPUT": [
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L3AddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::Ipv4OptionsReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::Ipv4OptionsReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::HopLimitReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::L3AddressReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::EcnReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::EcnReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::Ipv4SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "3",
    "ctrl": "inet::Ipv4SocketCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Indication",
    "kind": "1",
    "ctrl": "inet::Ipv4SocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::TosInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::TosInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::LinkStateMsg"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "removeAll",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DscpInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::EcnInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NextHopAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TosInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DscpInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::EcnInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::EncapsulationProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::MulticastReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DscpReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::EcnReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::FragmentationReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::Ipv4OptionsReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::TosReq"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::NextHopAddressReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ipv4.Ipv4RoutingTable": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstLoopbackInterface",
    "info": "findFirstLoopbackInterface"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::removeRoute",
    "info": "removeRoute(...)"
   },
   {
    "call to": "inet.networklayer.ldp.Ldp",
    "function": "inet::Ldp::receiveSignal",
    "info": "routeAdded"
   },
   {
    "call to": "inet.networklayer.ldp.Ldp",
    "function": "inet::Ldp::receiveSignal",
    "info": "routeDeleted"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
    "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
    "info": "routeDeleted"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
    "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
    "info": "routeDeleted"
   },
   {
    "call to": "inet.routing.pim.modes.PimDm",
    "function": "inet::PimDm::receiveSignal",
    "info": "routeAdded"
   },
   {
    "call to": "inet.routing.rip.Rip",
    "function": "inet::Rip::receiveSignal",
    "info": "routeAdded"
   },
   {
    "call to": "inet.routing.rip.Rip",
    "function": "inet::Rip::receiveSignal",
    "info": "routeDeleted"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ipv6.Ipv6": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
    "function": "inet::Ipv6NeighbourDiscovery::resolveNeighbour",
    "info": "resolveNeighbor(%s,if=%d)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
    "info": "doLongestPrefixMatch(%s)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%s)=?"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s) y/n"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::lookupDestCache",
    "info": "lookupDestCache(%s)"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.transportlayer.sctp.SctpCrcInsertion",
    "function": "inet::sctp::SctpCrcInsertion::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   },
   {
    "call to": "inet.transportlayer.tcp_common.TcpCrcInsertionHook",
    "function": "inet::tcp::TcpCrcInsertionHook::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   },
   {
    "call to": "inet.transportlayer.udp.UdpCrcInsertionHook",
    "function": "inet::UdpCrcInsertionHook::datagramPostRoutingHook",
    "info": "datagramPostRoutingHook"
   }
  ],
  "INPUT": [
   {
    "gate": "ndIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ndIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ndIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ndIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::EcnReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::Ipv6SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "inet::Ipv6NdControlInfo",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ndOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Icmpv6Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DscpInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::EcnInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TosInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DscpReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::EcnReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::Ipv6ExtHeaderReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::TosReq"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::L3AddressReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.networklayer.ipv6.Ipv6RoutingTable": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
    "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
    "info": "routeDeleted"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
    "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
    "info": "routeDeleted"
   }
  ],
  "TAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.networklayer.ldp.Ldp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetMulticastInterfaceCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetMulticastLoopCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::LdpHello"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "LDPSendHello",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.mpls.Mpls": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   }
  ],
  "INPUT": [
   {
    "gate": "lowerLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "lowerLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::MplsHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::MplsHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::MplsHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::MplsHeader"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   }
  ]
 },
 "inet.networklayer.nexthop.NextHopForwarding": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.GlobalArp",
    "function": "inet::GlobalArp::resolveL3Address",
    "info": "resolveL3Address"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%s)"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%s)"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s)"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::isLocalMulticastAddress",
    "info": "isLocalMulticastAddress(%s)"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.dymo.Dymo",
    "function": "inet::dymo::Dymo::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::datagramLocalOutHook",
    "info": "datagramLocalOutHook"
   },
   {
    "call to": "inet.routing.gpsr.Gpsr",
    "function": "inet::Gpsr::datagramPreRoutingHook",
    "info": "datagramPreRoutingHook"
   }
  ],
  "INPUT": [
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::L3SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::NextHopForwardingHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::NextHopForwardingHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::NextHopForwardingHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::NextHopForwardingHeader"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopAddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::L3AddressReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.networklayer.nexthop.NextHopRoutingTable": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   }
  ],
  "TAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::NextHopInterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
    "info": "findFirstNonLoopbackInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::L3SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "broadcastTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "removeEvent",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.networklayer.probabilistic.ProbabilisticBroadcast": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
    "info": "findFirstNonLoopbackInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::L3SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::ProbabilisticBroadcastHeader"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "broadcastTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.networklayer.rsvpte.RsvpClassifier": {
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.rsvpte.RsvpTe": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ted.LinkStateRouting",
    "function": "inet::LinkStateRouting::receiveSignal",
    "info": "tedChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L3AddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::RsvpHelloMsg"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::RsvpPathError"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::RsvpPathMsg"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::RsvpPathTear"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::RsvpResvMsg"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::RsvpHelloMsg"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::RsvpMessage"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::RsvpPathError"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::RsvpPathMsg"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::RsvpPathTear"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::RsvpResvMsg"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::HelloTimeoutMsg",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "hello timeout",
    "context": ""
   },
   {
    "msg": "inet::HelloTimerMsg",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "hello timer",
    "context": ""
   },
   {
    "msg": "inet::PathNotifyMsg",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "path notify",
    "context": ""
   },
   {
    "msg": "inet::PsbTimerMsg",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "psb timer",
    "context": ""
   },
   {
    "msg": "inet::RsbCommitTimerMsg",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "rsb commit",
    "context": ""
   },
   {
    "msg": "inet::RsbRefreshTimerMsg",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "rsb timer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ted.LinkStateRouting": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%u.%u.%u.%u)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::LinkStateMsg"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::LinkStateMsg"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "announce",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.ted.Ted": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
    "info": "getInterfaceByAddress(%u.%u.%u.%u)"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.networklayer.wiseroute.WiseRoute": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
    "info": "findFirstNonLoopbackInterface"
   }
  ],
  "INPUT": [
   {
    "gate": "queueIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "transportIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::L3SocketBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "queueOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "transportOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::WiseRouteHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::WiseRouteHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::WiseRouteHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::MacAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.node.ethernet.EthernetHub": {
  "INPUT": [
   {
    "gate": "ethg$i[]",
    "msg": "inet::physicallayer::EthernetFilledIfgSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "ethg$i[]",
    "msg": "inet::physicallayer::EthernetJamSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "ethg$i[]",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "ethg$o[]",
    "msg": "inet::physicallayer::EthernetFilledIfgSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "ethg$o[]",
    "msg": "inet::physicallayer::EthernetJamSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "ethg$o[]",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ]
 },
 "inet.physicallayer.wired.common.WireJunction": {
  "INPUT": [
   {
    "gate": "port$i[]",
    "msg": "inet::physicallayer::EthernetFilledIfgSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "port$i[]",
    "msg": "inet::physicallayer::EthernetJamSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "port$i[]",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "port$o[]",
    "msg": "inet::physicallayer::EthernetFilledIfgSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "port$o[]",
    "msg": "inet::physicallayer::EthernetJamSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "port$o[]",
    "msg": "inet::physicallayer::EthernetSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ]
 },
 "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter": {
  "CALL": [
   {
    "call to": "inet.protocolelement.common.InterpacketGapInserter",
    "function": "inet::InterpacketGapInserter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::handlePushPacketProcessed",
    "info": "handlePushPacketProcessed"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::EthernetPhyHeader"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ApskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
    "function": "inet::Ieee802154Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ApskPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ApskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ApskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBandReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ApskPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ApskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
    "function": "inet::Ieee802154Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
    "function": "inet::physicallayer::ApskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmittedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmittedSignalPartChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ApskPhyHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ApskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ApskPhyHeader"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::CsmaCaMacAckHeader"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::CsmaCaMacDataHeader"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::CsmaCaMacTrailer"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::IcmpEchoReply"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::IcmpEchoRequest"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekAllAsBits",
    "chunkType": ""
   },
   {
    "packetAction": "peekAllAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ApskPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ChannelReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBandReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   }
  ]
 },
 "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer": {
  "CALL": [
   {
    "call to": "inet.power.storage.IdealEpEnergyStorage",
    "function": "inet::power::IdealEpEnergyStorage::addEnergyConsumer",
    "info": "addEnergyConsumer"
   },
   {
    "call to": "inet.power.storage.IdealEpEnergyStorage",
    "function": "inet::power::IdealEpEnergyStorage::receiveSignal",
    "info": "powerConsumptionChanged"
   }
  ]
 },
 "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer": {
  "CALL": [
   {
    "call to": "inet.power.storage.IdealEpEnergyStorage",
    "function": "inet::power::IdealEpEnergyStorage::addEnergyConsumer",
    "info": "addEnergyConsumer"
   },
   {
    "call to": "inet.power.storage.IdealEpEnergyStorage",
    "function": "inet::power::IdealEpEnergyStorage::receiveSignal",
    "info": "powerConsumptionChanged"
   },
   {
    "call to": "inet.power.storage.SimpleEpEnergyStorage",
    "function": "inet::power::SimpleEpEnergyStorage::addEnergyConsumer",
    "info": "addEnergyConsumer"
   },
   {
    "call to": "inet.power.storage.SimpleEpEnergyStorage",
    "function": "inet::power::SimpleEpEnergyStorage::receiveSignal",
    "info": "powerConsumptionChanged"
   }
  ]
 },
 "inet.physicallayer.wireless.common.medium.RadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ApskPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ChannelReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBandReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.common.neighborcache.GridNeighborCache": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "refillCellsTimer",
    "context": ""
   }
  ]
 },
 "inet.physicallayer.wireless.common.neighborcache.NeighborListNeighborCache": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "updateNeighborListsTimer",
    "context": ""
   }
  ]
 },
 "inet.physicallayer.wireless.common.neighborcache.QuadTreeNeighborCache": {
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "rebuildQuadTreeTimer",
    "context": ""
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitsChunk"
   },
   {
    "packetAction": "peekAllAsBits",
    "chunkType": ""
   },
   {
    "packetAction": "peekAllAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekAt",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
    "function": "inet::physicallayer::Ieee80211OfdmRadio::setRadioMode",
    "info": "setRadioMode"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
    "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ChannelReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
    "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp",
    "function": "inet::ieee80211::Ieee80211MgmtAp::receiveSignal",
    "info": "radioChannelChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta",
    "function": "inet::ieee80211::Ieee80211MgmtSta::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmittedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
    "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receiveSignal",
    "info": "listeningChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::removeRadio",
    "info": "removeRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::NextHopAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::UserPriorityReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee80211SubtypeReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BitCountChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211HrDsssPhyHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211HtPhyHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   },
   {
    "packetAction": "popAtBack",
    "chunkType": "inet::Chunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::Ieee80211HtPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
    "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receiveSignal",
    "info": "interfaceConfigChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receiveSignal",
    "info": "listeningChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receiveSignal",
    "info": "radioModeChanged"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211HtPhyHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::MacAddressInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ChannelReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
    "function": "inet::physicallayer::Radio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
    "function": "inet::Ieee802154Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
    "function": "inet::Ieee802154Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmittedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
    "info": "computeBitErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
    "info": "computePacketErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
    "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
    "info": "computeSymbolErrorRate"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalPowerReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.noise.NoiseSource": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "sleepTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ]
 },
 "inet.physicallayer.wireless.shortcut.ShortcutRadio": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
    "info": "findInterfaceByNodeInputGateId"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "radioIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "radioIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::ShortcutPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::ShortcutPhyHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::MacAddressReq"
   }
  ]
 },
 "inet.physicallayer.wireless.unitdisk.UnitDiskRadio": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
    "function": "inet::Ieee802154Mac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "radioModeChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receivedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "receptionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmissionStateChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
    "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
    "info": "transmittedSignalPartChanged"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
    "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
    "info": "setRadioMode"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addRadio",
    "info": "addRadio"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::listenOnMedium",
    "info": "listenOnMedium"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::receivePacket",
    "info": "receivePacket"
   },
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::transmitPacket",
    "info": "transmitPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "radioIn",
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::ieee80211::LlcProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::physicallayer::Ieee80211ModeReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "upperLayerIn",
    "msg": "inet::Request",
    "kind": "1",
    "ctrl": "inet::physicallayer::ConfigureRadioCommand",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "upperLayerOut",
    "msg": "inet::Packet",
    "kind": "192",
    "ctrl": "",
    "tags": [
     "inet::ErrorRateInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   }
  ],
  "OUTPUTDIRECT": [
   {
    "msg": "inet::physicallayer::WirelessSignal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::UnitDiskPhyHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::UnitDiskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::physicallayer::WirelessSignal",
    "tags": [],
    "msgname": "receptionTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "transmissionTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium": {
  "CALL": [
   {
    "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
    "function": "inet::physicallayer::RadioMedium::addTransmission",
    "info": "addTransmission"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::UnitDiskPhyHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "removeNonInterferingTransmissions",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ChannelInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::physicallayer::Ieee80211ModeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalPowerInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SignalTimeInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SnirInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::physicallayer::Ieee80211ModeReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SignalBitrateReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.power.generator.AlternatingEpEnergyGenerator": {
  "CALL": [
   {
    "call to": "inet.power.storage.SimpleEpEnergyStorage",
    "function": "inet::power::SimpleEpEnergyStorage::addEnergyGenerator",
    "info": "addEnergyGenerator"
   },
   {
    "call to": "inet.power.storage.SimpleEpEnergyStorage",
    "function": "inet::power::SimpleEpEnergyStorage::receiveSignal",
    "info": "powerGenerationChanged"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   }
  ]
 },
 "inet.power.management.SimpleEpEnergyManagement": {
  "CALL": [
   {
    "call to": "inet.applications.pingapp.PingApp",
    "function": "inet::PingApp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.common.lifecycle.NodeStatus",
    "function": "inet::NodeStatus::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc",
    "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.Loopback",
    "function": "inet::Loopback::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.Arp",
    "function": "inet::Arp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
    "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
    "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.transportlayer.tcp.Tcp",
    "function": "inet::tcp::Tcp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.transportlayer.udp.Udp",
    "function": "inet::Udp::handleOperationStage",
    "info": "handleOperationStage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "lifecycleOperation",
    "context": ""
   }
  ]
 },
 "inet.power.storage.SimpleEpEnergyStorage": {
  "CALL": [
   {
    "call to": "inet.applications.pingapp.PingApp",
    "function": "inet::PingApp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.common.lifecycle.NodeStatus",
    "function": "inet::NodeStatus::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
    "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
    "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc",
    "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.Loopback",
    "function": "inet::Loopback::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.arp.ipv4.Arp",
    "function": "inet::Arp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
    "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
    "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.power.management.SimpleEpEnergyManagement",
    "function": "inet::power::SimpleEpEnergyManagement::receiveSignal",
    "info": "powerConsumptionChanged"
   },
   {
    "call to": "inet.power.management.SimpleEpEnergyManagement",
    "function": "inet::power::SimpleEpEnergyManagement::receiveSignal",
    "info": "powerGenerationChanged"
   },
   {
    "call to": "inet.transportlayer.tcp.Tcp",
    "function": "inet::tcp::Tcp::handleOperationStage",
    "info": "handleOperationStage"
   },
   {
    "call to": "inet.transportlayer.udp.Udp",
    "function": "inet::Udp::handleOperationStage",
    "info": "handleOperationStage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "timer",
    "context": ""
   }
  ]
 },
 "inet.protocolelement.common.InterpacketGapInserter": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
    "function": "inet::physicallayer::EthernetPhyHeaderInserter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.protocolelement.transceiver.PacketTransmitter",
    "function": "inet::PacketTransmitter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "IfgTimer",
    "context": ""
   }
  ]
 },
 "inet.protocolelement.common.PacketEmitter": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
    "function": "inet::EthernetFcsChecker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker",
    "function": "inet::physicallayer::EthernetPhyHeaderChecker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
    "function": "inet::physicallayer::EthernetPhyHeaderInserter::handlePushPacketProcessed",
    "info": "handlePushPacketProcessed"
   },
   {
    "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
    "function": "inet::physicallayer::EthernetPhyHeaderInserter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.protocolelement.common.InterpacketGapInserter",
    "function": "inet::InterpacketGapInserter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.protocolelement.transceiver.PacketTransmitter",
    "function": "inet::PacketTransmitter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.server.InstantServer",
    "function": "inet::queueing::InstantServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.server.InstantServer",
    "function": "inet::queueing::InstantServer::handlePushPacketProcessed",
    "info": "handlePushPacketProcessed"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   }
  ]
 },
 "inet.protocolelement.common.PaddingInserter": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.modular.EthernetFcsInserter",
    "function": "inet::EthernetFcsInserter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.protocolelement.measurement.OmittedMeasurementLayer": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.protocolelement.processing.OmittedProcessingDelayLayer": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.protocolelement.trafficconditioner.OmittedTrafficConditionerLayer": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.protocolelement.transceiver.PacketReceiver": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetReceivedFromLower"
   },
   {
    "call to": "inet.linklayer.ieee8021as.Gptp",
    "function": "inet::Gptp::receiveSignal",
    "info": "receptionEnded"
   },
   {
    "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker",
    "function": "inet::physicallayer::EthernetPhyHeaderChecker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::physicallayer::Signal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::GptpIngressTimeInd",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceInd"
   }
  ]
 },
 "inet.protocolelement.transceiver.PacketTransmitter": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee8021as.Gptp",
    "function": "inet::Gptp::receiveSignal",
    "info": "transmissionEnded"
   },
   {
    "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
    "function": "inet::physicallayer::EthernetPhyHeaderInserter::handlePushPacketProcessed",
    "info": "handlePushPacketProcessed"
   },
   {
    "call to": "inet.protocolelement.common.InterpacketGapInserter",
    "function": "inet::InterpacketGapInserter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::handlePushPacketProcessed",
    "info": "handlePushPacketProcessed"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::physicallayer::Signal",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PropagationTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::TransmissionTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "TxEndTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.buffer.PacketBuffer": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::handlePacketRemoved",
    "info": "handlePacketRemoved"
   }
  ]
 },
 "inet.queueing.buffer.PriorityBuffer": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::handlePacketRemoved",
    "info": "handlePacketRemoved"
   }
  ]
 },
 "inet.queueing.classifier.ContentBasedClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
    "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.classifier.LabelClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.marker.ContentBasedLabeler",
    "function": "inet::queueing::ContentBasedLabeler::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::LabelsTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::LabelsTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::LabelsTag"
   }
  ]
 },
 "inet.queueing.classifier.MarkovClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "WaitTimer",
    "context": ""
   }
  ]
 },
 "inet.queueing.classifier.PacketClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.common.PacketCloner",
    "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
    "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ]
 },
 "inet.queueing.classifier.PriorityClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.classifier.WrrClassifier": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.common.OmittedPacketFlow": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.queueing.common.OrdinalBasedDuplicator": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.common.PacketCloner": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.PacketClassifier",
    "function": "inet::queueing::PacketClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.MarkovScheduler",
    "function": "inet::queueing::MarkovScheduler::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.common.PacketDelayer": {
  "CALL": [
   {
    "call to": "inet.queueing.server.PacketServer",
    "function": "inet::queueing::PacketServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::DelayingTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ],
    "msgname": "producer-N",
    "context": ""
   },
   {
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ],
    "msgname": "sourceApplication-N",
    "context": ""
   }
  ]
 },
 "inet.queueing.common.PacketDemultiplexer": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.common.PacketDuplicator": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.common.PacketMultiplexer": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.linklayer.ethernet.common.RelayInterfaceSelector",
    "function": "inet::RelayInterfaceSelector::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
    "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.networklayer.diffserv.DiffservQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.networklayer.diffserv.DscpMarker",
    "function": "inet::DscpMarker::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketCloner",
    "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.filter.RedDropper",
    "function": "inet::queueing::RedDropper::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq",
     "inet::VlanReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.filter.ContentBasedFilter": {
  "CALL": [
   {
    "call to": "inet.queueing.filter.ContentBasedFilter",
    "function": "inet::queueing::ContentBasedFilter::canPullPacket",
    "info": "canPullPacket"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::canPullPacket",
    "info": "canPullPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.filter.OrdinalBasedDropper": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.filter.RedDropper": {
  "CALL": [
   {
    "call to": "inet.examples.inet.netperfmeter.REDQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
    "info": "packetDropped"
   },
   {
    "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
    "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.filter.RedDropper",
    "function": "inet::queueing::RedDropper::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.RedDropperQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
    "info": "packetDropped"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertDataAt",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::EthernetMacHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "removeDataAt",
    "chunkType": "inet::Ipv4Header"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::NetworkProtocolInd"
   }
  ]
 },
 "inet.queueing.filter.StatisticalRateLimiter": {
  "CALL": [
   {
    "call to": "inet.queueing.meter.ExponentialRateMeter",
    "function": "inet::queueing::ExponentialRateMeter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::RateTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::RateTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::RateTag"
   }
  ]
 },
 "inet.queueing.flow.FlowMeasurementRecorder": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.flow.FlowMeasurementRecorder",
    "function": "inet::queueing::FlowMeasurementRecorder::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::InterfaceInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::ElapsedTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::FlowTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.flow.FlowMeasurementStarter": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTagsWhereAbsent",
    "tagType": "inet::ElapsedTimeTag"
   },
   {
    "tagAction": "addTagsWhereAbsent",
    "tagType": "inet::FlowTag"
   },
   {
    "tagAction": "addTagsWhereAbsent",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::ElapsedTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::FlowTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.gate.PacketGate": {
  "CALL": [
   {
    "call to": "inet.queueing.gate.PacketGate",
    "function": "inet::queueing::PacketGate::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.gate.PacketGate",
    "function": "inet::queueing::PacketGate::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ChangeTimer",
    "context": ""
   }
  ]
 },
 "inet.queueing.marker.ContentBasedLabeler": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.LabelClassifier",
    "function": "inet::queueing::LabelClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::LabelsTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::LabelsTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.marker.ContentBasedTagger": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::HopLimitReq"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.marker.PacketTagger": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::HopLimitReq"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   }
  ]
 },
 "inet.queueing.meter.ExponentialRateMeter": {
  "CALL": [
   {
    "call to": "inet.queueing.filter.StatisticalRateLimiter",
    "function": "inet::queueing::StatisticalRateLimiter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::RateTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::RateTag"
   }
  ]
 },
 "inet.queueing.queue.DropTailQueue": {
  "CALL": [
   {
    "call to": "inet.examples.diffserv.onedomain.DSQueue1",
    "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
    "info": "packetDropped"
   },
   {
    "call to": "inet.linklayer.acking.AckingMac",
    "function": "inet::AckingMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.bmac.BMac",
    "function": "inet::BMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.csmaca.CsmaCaMac",
    "function": "inet::CsmaCaMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetFrameClassifier",
    "function": "inet::EthernetFrameClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.common.EthernetQosQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
    "info": "packetDropped"
   },
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
    "function": "inet::Ieee802154Mac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
    "function": "inet::Ieee802154Mac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.lmac.LMac",
    "function": "inet::LMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.xmac.XMac",
    "function": "inet::XMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
    "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.scheduler.WrrScheduler",
    "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.PacketServer",
    "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.queue.OmittedPacketQueue": {
  "CALL": [
   {
    "call to": "inet.linklayer.shortcut.ShortcutInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.queueing.queue.PacketQueue": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.buffer.PacketBuffer",
    "function": "inet::queueing::PacketBuffer::addPacket",
    "info": "addPacket"
   },
   {
    "call to": "inet.queueing.buffer.PacketBuffer",
    "function": "inet::queueing::PacketBuffer::removePacket",
    "info": "removePacket"
   },
   {
    "call to": "inet.queueing.buffer.PriorityBuffer",
    "function": "inet::queueing::PacketBuffer::addPacket",
    "info": "addPacket"
   },
   {
    "call to": "inet.queueing.buffer.PriorityBuffer",
    "function": "inet::queueing::PacketBuffer::removePacket",
    "info": "removePacket"
   },
   {
    "call to": "inet.queueing.classifier.PriorityClassifier",
    "function": "inet::queueing::PriorityClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.WrrClassifier",
    "function": "inet::queueing::WrrClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.filter.RedDropper",
    "function": "inet::queueing::RedDropper::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.flow.FlowMeasurementStarter",
    "function": "inet::queueing::FlowMeasurementStarter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.scheduler.WrrScheduler",
    "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.InstantServer",
    "function": "inet::queueing::InstantServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.PacketServer",
    "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.tokengenerator.QueueBasedTokenGenerator",
    "function": "inet::queueing::QueueBasedTokenGenerator::receiveSignal",
    "info": "packetPulled"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::QueueingTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.queue.PriorityQueue": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.WrrClassifier",
    "function": "inet::queueing::WrrClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::pullPacket",
    "info": "pullPacket"
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.queue.RedDropperQueue": {
  "CALL": [
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.queueing.scheduler.ContentBasedScheduler": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::canPullPacket",
    "info": "canPullPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "setBackOffset",
    "chunkType": ""
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.queueing.scheduler.MarkovScheduler": {
  "CALL": [
   {
    "call to": "inet.queueing.common.PacketCloner",
    "function": "inet::queueing::PacketCloner::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.source.EmptyPacketSource",
    "function": "inet::queueing::EmptyPacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "WaitTimer",
    "context": ""
   }
  ]
 },
 "inet.queueing.scheduler.PacketScheduler": {
  "CALL": [
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::canPullPacket",
    "info": "canPullPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ]
 },
 "inet.queueing.scheduler.PriorityScheduler": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.WrrScheduler",
    "function": "inet::queueing::WrrScheduler::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ]
 },
 "inet.queueing.scheduler.WrrScheduler": {
  "CALL": [
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PULL_IN": [
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ]
 },
 "inet.queueing.server.InstantServer": {
  "CALL": [
   {
    "call to": "inet.common.packet.recorder.PcapRecorder",
    "function": "inet::PcapRecorder::receiveSignal",
    "info": "packetSentToLower"
   },
   {
    "call to": "inet.protocolelement.common.PacketEmitter",
    "function": "inet::PacketEmitter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DropEligibleReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::PcpReq",
     "inet::UserPriorityReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::EcnInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::MulticastReq",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::Ieee802SapReq",
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::InterfaceReq",
     "inet::MacAddressReq",
     "inet::PacketProtocolTag",
     "inet::VlanInd"
    ]
   }
  ]
 },
 "inet.queueing.server.PacketServer": {
  "CALL": [
   {
    "call to": "inet.queueing.common.PacketDelayer",
    "function": "inet::queueing::PacketDelayer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::PacketEventTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::ProcessingTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ProcessingTimer",
    "context": ""
   }
  ]
 },
 "inet.queueing.server.TokenBasedServer": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.ContentBasedClassifier",
    "function": "inet::queueing::ContentBasedClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.classifier.PacketClassifier",
    "function": "inet::queueing::PacketClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::canPullPacket",
    "info": "canPullPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
    "function": "inet::queueing::PacketBasedTokenGenerator::receiveSignal",
    "info": "tokensDepleted"
   },
   {
    "call to": "inet.queueing.tokengenerator.SignalBasedTokenGenerator",
    "function": "inet::queueing::SignalBasedTokenGenerator::receiveSignal",
    "info": "tokensDepleted"
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ]
 },
 "inet.queueing.shaper.OmittedTrafficConditioner": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.queueing.sink.ActivePacketSink": {
  "CALL": [
   {
    "call to": "inet.queueing.common.PacketDemultiplexer",
    "function": "inet::queueing::PacketDemultiplexer::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.filter.ContentBasedFilter",
    "function": "inet::queueing::ContentBasedFilter::canPullSomePacket",
    "info": "canPullSomePacket"
   },
   {
    "call to": "inet.queueing.filter.ContentBasedFilter",
    "function": "inet::queueing::ContentBasedFilter::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.gate.PacketGate",
    "function": "inet::queueing::PacketGate::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.queue.PriorityQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.ContentBasedScheduler",
    "function": "inet::queueing::ContentBasedScheduler::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.MarkovScheduler",
    "function": "inet::queueing::MarkovScheduler::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PacketScheduler",
    "function": "inet::queueing::PacketScheduler::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.scheduler.WrrScheduler",
    "function": "inet::queueing::WrrScheduler::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::canPullPacket",
    "info": "canPullPacket"
   },
   {
    "call to": "inet.queueing.source.PassivePacketSource",
    "function": "inet::queueing::PassivePacketSource::pullPacket",
    "info": "pullPacket"
   },
   {
    "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
    "info": "pullPacket"
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "PULL_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "CollectionTimer",
    "context": ""
   }
  ]
 },
 "inet.queueing.sink.PassivePacketSink": {
  "CALL": [
   {
    "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
    "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.networklayer.diffserv.MultiFieldClassifier",
    "function": "inet::MultiFieldClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.ContentBasedClassifier",
    "function": "inet::queueing::ContentBasedClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.LabelClassifier",
    "function": "inet::queueing::LabelClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.MarkovClassifier",
    "function": "inet::queueing::MarkovClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.PacketClassifier",
    "function": "inet::queueing::PacketClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.WrrClassifier",
    "function": "inet::queueing::WrrClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.OrdinalBasedDuplicator",
    "function": "inet::queueing::OrdinalBasedDuplicator::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketCloner",
    "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketDelayer",
    "function": "inet::queueing::PacketDelayer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketDuplicator",
    "function": "inet::queueing::PacketDuplicator::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.filter.ContentBasedFilter",
    "function": "inet::queueing::ContentBasedFilter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.filter.OrdinalBasedDropper",
    "function": "inet::queueing::OrdinalBasedDropper::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.filter.StatisticalRateLimiter",
    "function": "inet::queueing::StatisticalRateLimiter::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.flow.FlowMeasurementRecorder",
    "function": "inet::queueing::FlowMeasurementRecorder::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.gate.PacketGate",
    "function": "inet::queueing::PacketGate::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.marker.ContentBasedTagger",
    "function": "inet::queueing::ContentBasedTagger::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.marker.PacketTagger",
    "function": "inet::queueing::PacketTagger::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.server.PacketServer",
    "function": "inet::queueing::PacketServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.tokengenerator.SignalBasedTokenGenerator",
    "function": "inet::queueing::SignalBasedTokenGenerator::receiveSignal",
    "info": "packetDropped"
   },
   {
    "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
    "info": "packetDropped"
   }
  ],
  "INPUT": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::InterfaceInd",
     "inet::MacAddressInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::HopLimitReq"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::LabelsTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::RateTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::ResidenceTimeTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   },
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::ResidenceTimeTag"
   },
   {
    "tagAction": "removeTagsWherePresent",
    "tagType": "inet::ResidenceTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ConsumptionTimer",
    "context": ""
   }
  ]
 },
 "inet.queueing.source.ActivePacketSource": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.ContentBasedClassifier",
    "function": "inet::queueing::ContentBasedClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.classifier.MarkovClassifier",
    "function": "inet::queueing::MarkovClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.classifier.PacketClassifier",
    "function": "inet::queueing::PacketClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.classifier.PriorityClassifier",
    "function": "inet::queueing::PriorityClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.classifier.WrrClassifier",
    "function": "inet::queueing::WrrClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.OrdinalBasedDuplicator",
    "function": "inet::queueing::OrdinalBasedDuplicator::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketCloner",
    "function": "inet::queueing::PacketCloner::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketDelayer",
    "function": "inet::queueing::PacketDelayer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketDuplicator",
    "function": "inet::queueing::PacketDuplicator::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.common.PacketMultiplexer",
    "function": "inet::queueing::PacketMultiplexer::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.filter.ContentBasedFilter",
    "function": "inet::queueing::ContentBasedFilter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.filter.OrdinalBasedDropper",
    "function": "inet::queueing::OrdinalBasedDropper::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.filter.RedDropper",
    "function": "inet::queueing::RedDropper::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.flow.FlowMeasurementStarter",
    "function": "inet::queueing::FlowMeasurementStarter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.gate.PacketGate",
    "function": "inet::queueing::PacketGate::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.marker.ContentBasedLabeler",
    "function": "inet::queueing::ContentBasedLabeler::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.marker.ContentBasedTagger",
    "function": "inet::queueing::ContentBasedTagger::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.marker.PacketTagger",
    "function": "inet::queueing::PacketTagger::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.meter.ExponentialRateMeter",
    "function": "inet::queueing::ExponentialRateMeter::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.DropTailQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.PacketQueue",
    "function": "inet::queueing::PacketQueue::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.queue.PriorityQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.MarkovScheduler",
    "function": "inet::queueing::MarkovScheduler::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.sink.PassivePacketSink",
    "function": "inet::queueing::PassivePacketSink::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
    "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
    "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
    "info": "packetCreated"
   }
  ],
  "OUTPUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "PUSH_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTagsWhereAbsent",
    "tagType": "inet::ResidenceTimeTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::IdentityTag"
   },
   {
    "tagAction": "mapAllTagsForUpdate",
    "tagType": "inet::ResidenceTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ProductionTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   }
  ]
 },
 "inet.queueing.source.PassivePacketSource": {
  "CALL": [
   {
    "call to": "inet.queueing.common.PacketDemultiplexer",
    "function": "inet::queueing::PacketDemultiplexer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.filter.ContentBasedFilter",
    "function": "inet::queueing::ContentBasedFilter::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.gate.PacketGate",
    "function": "inet::queueing::PacketGate::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.scheduler.ContentBasedScheduler",
    "function": "inet::queueing::ContentBasedScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.scheduler.MarkovScheduler",
    "function": "inet::queueing::MarkovScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.scheduler.PacketScheduler",
    "function": "inet::queueing::PacketScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.scheduler.WrrScheduler",
    "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.PacketServer",
    "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   },
   {
    "call to": "inet.queueing.sink.ActivePacketSink",
    "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
    "info": "handleCanPullPacketChanged"
   }
  ],
  "PULLED_OUT": [
   {
    "gate": "out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::IdentityTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ProvidingTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DirectionTag"
   }
  ]
 },
 "inet.queueing.tokengenerator.PacketBasedTokenGenerator": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.ContentBasedClassifier",
    "function": "inet::queueing::ContentBasedClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.classifier.PacketClassifier",
    "function": "inet::queueing::PacketClassifier::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::addTokens",
    "info": "addTokens"
   },
   {
    "call to": "inet.queueing.source.ActivePacketSource",
    "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
    "info": "handleCanPushPacketChanged"
   },
   {
    "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
    "function": "inet::queueing::PacketBasedTokenGenerator::receiveSignal",
    "info": "tokensDepleted"
   }
  ],
  "PUSHED_IN": [
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "in",
    "msg": "inet::Packet",
    "kind": "1",
    "ctrl": "",
    "tags": []
   }
  ]
 },
 "inet.queueing.tokengenerator.QueueBasedTokenGenerator": {
  "CALL": [
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::addTokens",
    "info": "addTokens"
   },
   {
    "call to": "inet.queueing.tokengenerator.QueueBasedTokenGenerator",
    "function": "inet::queueing::QueueBasedTokenGenerator::receiveSignal",
    "info": "packetPulled"
   }
  ]
 },
 "inet.queueing.tokengenerator.SignalBasedTokenGenerator": {
  "CALL": [
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::addTokens",
    "info": "addTokens"
   }
  ]
 },
 "inet.queueing.tokengenerator.TimeBasedTokenGenerator": {
  "CALL": [
   {
    "call to": "inet.queueing.server.TokenBasedServer",
    "function": "inet::queueing::TokenBasedServer::addTokens",
    "info": "addTokens"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::ClockEvent",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "GenerationTimer",
    "context": ""
   }
  ]
 },
 "inet.routing.aodv.Aodv": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::dropQueuedDatagram",
    "info": "dropQueuedDatagram()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::reinjectQueuedDatagram",
    "info": "reinjectDatagram()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetBroadcastCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::aodv::Rerr"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::aodv::Rrep"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::aodv::Rreq"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::aodv::AodvControlPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::aodv::PacketHolderMessage",
    "kind": "100",
    "ctrl": "",
    "tags": [],
    "msgname": "aodv-send-jitter",
    "context": ""
   },
   {
    "msg": "inet::aodv::WaitForRrep",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "BlackListTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "CounterTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ExpungeTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RrepAckTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ]
 },
 "inet.routing.bgpv4.Bgp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.routing.ospfv2.Ospfv2",
    "function": "inet::ospfv2::Ospfv2::checkExternalRoute",
    "info": "checkExternalRoute"
   },
   {
    "call to": "inet.routing.ospfv2.Ospfv2",
    "function": "inet::ospfv2::Ospfv2::insertExternalRoute",
    "info": "insertExternalRoute"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
    "ctrl": "inet::TcpSetTimeToLiveCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::bgp::BgpKeepAliveMessage"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::bgp::BgpOpenMessage"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::bgp::BgpUpdateMessage"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "81",
    "ctrl": "",
    "tags": [],
    "msgname": "BGP Start",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "82",
    "ctrl": "",
    "tags": [],
    "msgname": "BGP Connect Retry",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "83",
    "ctrl": "",
    "tags": [],
    "msgname": "BGP Hold Timer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "89",
    "ctrl": "",
    "tags": [],
    "msgname": "BGP Keep Alive Timer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.routing.dsdv.Dsdv": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::DsdvHello"
   },
   {
    "packetAction": "peekData",
    "chunkType": "inet::DsdvHello"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "event",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.routing.dymo.Dymo": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::reinjectQueuedDatagram",
    "info": "reinjectDatagram()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::removeRoute",
    "info": "removeRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
    "info": "doLongestPrefixMatch(%s)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s) y/n"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopForwarding",
    "function": "inet::NextHopForwarding::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopForwarding",
    "function": "inet::NextHopForwarding::reinjectQueuedDatagram",
    "info": "reinjectDatagram()"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%s)"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s)"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::removeRoute",
    "info": "removeRoute(...)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::dymo::Rerr"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::dymo::Rrep"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::dymo::Rreq"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::dymo::DymoPacket"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::UdpHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "inet::dymo::PacketJitterTimer",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "PacketJitterTimer",
    "context": ""
   },
   {
    "msg": "inet::dymo::RreqBackoffTimer",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RreqBackoffTimer",
    "context": ""
   },
   {
    "msg": "inet::dymo::RreqWaitRrepTimer",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RreqWaitRrepTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.routing.eigrp.EigrpRtp6": {
  "INPUT": [
   {
    "gate": "pdmIn",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "pdmIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "pdmOut",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpMessage"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ]
 },
 "inet.routing.eigrp.EigrpRtp": {
  "INPUT": [
   {
    "gate": "pdmIn",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "pdmIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "pdmOut",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpMessage"
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ]
 },
 "inet.routing.eigrp.EigrpSplitter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "splitter6In",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "splitterIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "splitter6Out",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "splitterOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.routing.eigrp.pdms.EigrpIpv4Pdm": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupLeft"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::removeRoute",
    "info": "removeRoute(...)"
   }
  ],
  "INPUT": [
   {
    "gate": "rtpIn",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "splitterIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "rtpOut",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "rtpOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "splitterOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv4Ack"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv4Hello"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv4Query"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv4Reply"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv4Update"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv4Ack"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv4Hello"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv4Query"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv4Reply"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv4Update"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpMessage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "EigrpTimer",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.routing.eigrp.pdms.EigrpIpv6Pdm": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
    "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
    "info": "routeDeleted"
   },
   {
    "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
    "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
    "info": "routeDeleted"
   }
  ],
  "INPUT": [
   {
    "gate": "rtpIn",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "splitterIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "rtpOut",
    "msg": "inet::EigrpMsgReq",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "rtpOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "splitterOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv6Ack"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv6Hello"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv6Query"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv6Reply"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::EigrpIpv6Update"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv6Ack"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv6Hello"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv6Query"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv6Reply"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpIpv6Update"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::EigrpMessage"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "EigrpTimer",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.routing.gpsr.Gpsr": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s) y/n"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopForwarding",
    "function": "inet::NextHopForwarding::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
    "function": "inet::NextHopRoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::GpsrBeacon"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::NextHopForwardingHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::GpsrBeacon"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::NextHopForwardingHeader"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "BeaconTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::NextHopAddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::NextHopInterfaceData"
   }
  ]
 },
 "inet.routing.ospfv2.Ospfv2": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv2::Ospfv2DatabaseDescriptionPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv2::Ospfv2HelloPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv2::Ospfv2LinkStateAcknowledgementPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv2::Ospfv2LinkStateRequestPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv2::Ospfv2LinkStateUpdatePacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv2::Ospfv2DatabaseDescriptionPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv2::Ospfv2HelloPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv2::Ospfv2LinkStateAcknowledgementPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv2::Ospfv2LinkStateRequestPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv2::Ospfv2LinkStateUpdatePacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv2::Ospfv2Packet"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0 (inet::ospfv2::Ospfv2TimerType::INTERFACE_HELLO_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Interface::InterfaceHelloTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1 (inet::ospfv2::Ospfv2TimerType::INTERFACE_WAIT_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Interface::InterfaceWaitTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3 (inet::ospfv2::Ospfv2TimerType::INTERFACE_ACKNOWLEDGEMENT_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Interface::InterfaceAcknowledgementTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "4 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_INACTIVITY_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Neighbor::NeighborInactivityTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "6 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_DD_RETRANSMISSION_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Neighbor::NeighborDDRetransmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "7 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_UPDATE_RETRANSMISSION_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Neighbor::Neighbor::NeighborUpdateRetransmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "8 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_REQUEST_RETRANSMISSION_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Neighbor::NeighborRequestRetransmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "9 (inet::ospfv2::Ospfv2TimerType::DATABASE_AGE_TIMER)",
    "ctrl": "",
    "tags": [],
    "msgname": "Router::DatabaseAgeTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.routing.ospfv3.Ospfv3Splitter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.routing.ospfv3.process.Ospfv3Process",
    "function": "inet::ospfv3::Ospfv3Process::activateProcess",
    "info": "activateProcess"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "processIn[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "processOut[]",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "STAG": [
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.routing.ospfv3.process.Ospfv3Process": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::findInterfaceByName",
    "info": "findInterfaceByName"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   }
  ],
  "INPUT": [
   {
    "gate": "splitterIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "splitterOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv3::Ospfv3DatabaseDescriptionPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv3::Ospfv3HelloPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv3::Ospfv3LinkStateAcknowledgementPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv3::Ospfv3LinkStateRequestPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ospfv3::Ospfv3LinkStateUpdatePacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv3::Ospfv3DatabaseDescriptionPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv3::Ospfv3HelloPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv3::Ospfv3LinkStateAcknowledgementPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv3::Ospfv3LinkStateRequestPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv3::Ospfv3LinkStateUpdatePacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::ospfv3::Ospfv3Packet"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "10",
    "ctrl": "",
    "tags": [],
    "msgname": "",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNInterface::HelloTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "2",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNInterface::WaitTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNNeighbor::NeighborInactivityTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNNeighbor::NeighborDDRetransmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "6",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNNeighbor::Neighbor::NeighborUpdateRetransmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "7",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNsNeighbor::NeighborRequestRetransmissionTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "8",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNInterface::AcknowledgementTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "9",
    "ctrl": "",
    "tags": [],
    "msgname": "OspfvNProcess::DatabaseAgeTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.routing.pim.modes.PimDm": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addMulticastRoute",
    "info": "addMulticastRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.routing.pim.tables.PimNeighborTable",
    "function": "inet::PimNeighborTable::addNeighbor",
    "info": "addNeighbor"
   },
   {
    "call to": "inet.routing.pim.tables.PimNeighborTable",
    "function": "inet::PimNeighborTable::restartLivenessTimer",
    "info": "restartLivenessTimer"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimAssert"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimGraft"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimHello"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimJoinPrune"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimAssert"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimGraft"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimHello"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimJoinPrune"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "PIM HelloTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "3",
    "ctrl": "",
    "tags": [],
    "msgname": "PimAssertTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "4",
    "ctrl": "",
    "tags": [],
    "msgname": "PimPruneTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "PimPrunePendingTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "7",
    "ctrl": "",
    "tags": [],
    "msgname": "PIMOverrideTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.routing.pim.modes.PimSm": {
  "CALL": [
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addMulticastRoute",
    "info": "addMulticastRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
    "info": "findBestMatchingRoute(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "pimNeighborChanged"
   },
   {
    "call to": "inet.routing.pim.tables.PimNeighborTable",
    "function": "inet::PimNeighborTable::addNeighbor",
    "info": "addNeighbor"
   },
   {
    "call to": "inet.routing.pim.tables.PimNeighborTable",
    "function": "inet::PimNeighborTable::restartLivenessTimer",
    "info": "restartLivenessTimer"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::HopLimitReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::L3AddressReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimHello"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimJoinPrune"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimRegister"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::PimRegisterStop"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimHello"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimJoinPrune"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimRegisterStop"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::PimRegister"
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "12",
    "ctrl": "",
    "tags": [],
    "msgname": "PIMRegisterStopTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "14",
    "ctrl": "",
    "tags": [],
    "msgname": "PIMJoinTimer",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "1",
    "ctrl": "",
    "tags": [],
    "msgname": "PIM HelloTimer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "5",
    "ctrl": "",
    "tags": [],
    "msgname": "PIMPrunePendingTimer",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.routing.pim.Pim": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   }
  ]
 },
 "inet.routing.pim.PimSplitter": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "pimDMIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "pimSMIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "pimSMIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::HopLimitReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::L3AddressReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::HopLimitReq",
     "inet::InterfaceInd",
     "inet::InterfaceReq",
     "inet::L3AddressInd",
     "inet::L3AddressReq",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "pimDMOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "pimSMOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::PimPacket"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.routing.pim.tables.PimNeighborTable": {
  "CALL": [
   {
    "call to": "inet.routing.pim.modes.PimSm",
    "function": "inet::PimSm::receiveSignal",
    "info": "pimNeighborAdded"
   },
   {
    "call to": "inet.routing.pim.tables.PimNeighborTable",
    "function": "inet::PimNeighborTable::restartLivenessTimer",
    "info": "restartLivenessTimer"
   }
  ]
 },
 "inet.routing.rip.Rip": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::addRoute",
    "info": "addRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::deleteRoute",
    "info": "deleteRoute(...)"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::isLocalAddress",
    "info": "isLocalAddress(%s) y/n"
   },
   {
    "call to": "inet.routing.rip.Rip",
    "function": "inet::Rip::receiveSignal",
    "info": "routeChanged"
   }
  ],
  "INPUT": [
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
    "ctrl": "inet::UdpErrorIndication",
    "tags": [
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "socketIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetMulticastLoopCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetTimeToLiveCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "socketOut",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::RipPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::RipPacket"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RIP-shutdown",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RIP-startup",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RIP-timer",
    "context": ""
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "RIP-trigger",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "clearTags",
    "tagType": ""
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::HopLimitInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L4PortInd"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.showcases.general.diffserv.DiffservNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.general.pcaprecording.PcapRecordingShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.datarate.DataRateMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.endtoenddelay.EndToEndDelayMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.flow.FlowMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.jitter.JitterMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.propagationtime.PropagationTimeMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.queueingtime.QueueingTimeMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.residencetime.ResidenceTimeMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.throughput.ChannelThroughputMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.transmissiontime.TransmissionTimeMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.measurement.utilization.ChannelUtilizationMeasurementShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.mobility.basic.MobilityShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.mobility.combining.AntennaOrientation": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.mobility.combining.MobilityShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.mobility.spatial.MobilityShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.routing.manet.ManetprotocolsShowcaseA": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.routing.manet.ManetprotocolsShowcaseB": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.datalinkactivity.DataLinkVisualizerActivityLevelShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.datalinkactivity.DataLinkVisualizerEnablingWiredShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.datalinkactivity.DataLinkVisualizerEnablingWirelessShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.datalinkactivity.DataLinkVisualizerFilteringShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.datalinkactivity.DataLinkVisualizerMobileShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.ieee80211.Ieee80211VisualizationAdvancedFeaturesShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.ieee80211.Ieee80211VisualizationDisplayingAssociationsShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.ieee80211.Ieee80211VisualizationSignalLevelsShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.ieee80211.Ieee80211VisualizationVisualizingHandoverShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.instrumentfigures.InstrumentShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.interfacetable.InterfaceTableVisualizationAdvancedFeaturesShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.interfacetable.InterfaceTableVisualizationEnablingVisualizationShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.mobility.MobilityVisualizerShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.networkpathactivity.NetworkPathComplexShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.networkpathactivity.NetworkPathMobileShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.networkpathactivity.NetworkPathRIPShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.networkpathactivity.NetworkPathSimpleShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.packetdrop.PacketDropArpResolutionFailedShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.packetdrop.PacketDropInterfaceNotConnectedShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.packetdrop.PacketDropMacRetryLimitReachedShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.packetdrop.PacketDropNoRouteToDestinationShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.packetdrop.PacketDropQueueOverflowShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.physicallinkactivity.PhysicalLinkVisualizerEnablingShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.physicallinkactivity.PhysicalLinkVisualizerFilteringShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.physicallinkactivity.PhysicalLinkVisualizerMobileShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.routingtable.RoutingTableVisualizationDisplayingAllShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.routingtable.RoutingTableVisualizationDynamicShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.routingtable.RoutingTableVisualizationFilteringShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.spectrum.SpectrumShowcasePowerDensityMapNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.spectrum.SpectrumShowcaseSpectrumFigureSpectrogramNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.statistic.StatisticVisualizationPacketErrorRateShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.statistic.StatisticVisualizationPingRttShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.styling.AnnotationShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.styling.StylingShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.submoduleinfo.SubmoduleInformationVisualizationShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.transportconnection.TransportConnectionVisualizationEnablingShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.transportconnection.TransportConnectionVisualizationMultipleConnectionsShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.transportpathactivity.TransportPathVisualizerFilteringShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.Ppp",
    "function": "inet::Ppp::receiveSignal",
    "info": "PRE_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ppp.PppInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.transportpathactivity.TransportPathVisualizerSimpleWiredShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.canvas.transportpathactivity.TransportPathVisualizerSimpleWirelessShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.visualizer.osg.networknode.NetworkNodeVisualizerShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.aggregation.AggregationShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.analogmodel.AnalogModelShowcaseDistanceNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.analogmodel.AnalogModelShowcaseNoiseNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.analogmodel.AnalogModelShowcaseRoutingNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.blockack.BlockAckShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.coexistence.CoexistenceShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.crosstalk.CrosstalkShowcaseOneScalarRadioMediumModule": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.crosstalk.CrosstalkShowcasePartiallyOverlappingFrequencyBands": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.crosstalk.CrosstalkShowcaseTwoScalarRadioMediumModules": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.directionalantennas.DirectionalAntennasShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.errorrate.ErrorRateShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.fragmentation.FragmentationShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.handover.HandoverShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.hiddennode.HiddenNodeShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.ieee802154.Ieee802154Showcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.multiradio.MultiRadioShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.pathloss.PathLossShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.power.PowerConsumptionShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.qos.QosShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.ratecontrol.RateControlShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.sensornetwork.ManetSensorNetwork": {
  "CALL": [
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.sensornetwork.SensorNetworkShowcaseA": {
  "CALL": [
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.sensornetwork.SensorNetworkShowcaseB": {
  "CALL": [
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.throughput.Throughput": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.showcases.wireless.txop.TxopShowcase": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tests.ethernet.HostsWithBus": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.physicallayer.wired.common.WireJunction",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tests.ethernet.HostsWithHub": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.node.ethernet.EthernetHub",
    "function": "inet::physicallayer::WireJunction::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tests.ethernet.HostsWithSwitch": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tests.ethernet.TwoHosts": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
    "function": "inet::EthernetCsmaMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.transportlayer.rtp.Rtcp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   }
  ],
  "INPUT": [
   {
    "gate": "rtpIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "udpIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "rtpOut",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "udpOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "udpOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "udpOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::rtp::RtcpByePacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::rtp::RtcpReceiverReportPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::rtp::RtcpSdesPacket"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::rtp::RtcpSenderReportPacket"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::rtp::RtpHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::rtp::RtcpPacket"
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "Interval",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.transportlayer.rtp.Rtp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   }
  ],
  "INPUT": [
   {
    "gate": "appIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiCreateSenderModule",
    "tags": []
   },
   {
    "gate": "appIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiEnterSession",
    "tags": []
   },
   {
    "gate": "appIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiLeaveSession",
    "tags": []
   },
   {
    "gate": "appIn",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSenderControl",
    "tags": []
   },
   {
    "gate": "profileIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "rtcpIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "udpIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "appOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSenderModuleCreated",
    "tags": []
   },
   {
    "gate": "appOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSenderStatus",
    "tags": []
   },
   {
    "gate": "appOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSessionEntered",
    "tags": []
   },
   {
    "gate": "appOut",
    "msg": "inet::rtp::RtpControlMsg",
    "kind": "0",
    "ctrl": "inet::rtp::RtpCiSessionLeft",
    "tags": []
   },
   {
    "gate": "profileOut",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "rtcpOut",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "udpOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "udpOut",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "udpOut",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::rtp::RtpHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "getAllTags",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   }
  ]
 },
 "inet.transportlayer.rtp.RtpAvProfile": {
  "INPUT": [
   {
    "gate": "payloadSenderIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "rtpIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "payloadReceiverOut[]",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "payloadSenderOut",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   },
   {
    "gate": "rtpOut",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::rtp::RtpHeader"
   }
  ]
 },
 "inet.transportlayer.rtp.RtpAvProfilePayload32Receiver": {
  "INPUT": [
   {
    "gate": "profileIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::rtp::RtpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::rtp::RtpMpegHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::rtp::RtpHeader"
   }
  ]
 },
 "inet.transportlayer.rtp.RtpAvProfilePayload32Sender": {
  "INPUT": [
   {
    "gate": "profileIn",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "OUTPUT": [
   {
    "gate": "profileOut",
    "msg": "inet::rtp::RtpInnerPacket",
    "kind": "0",
    "ctrl": "",
    "tags": []
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::rtp::RtpMpegHeader"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::rtp::RtpHeader"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "nextFrame",
    "context": ""
   }
  ]
 },
 "inet.transportlayer.sctp.Sctp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
    "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
    "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
    "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
    "info": "doLongestPrefixMatch(%s)"
   }
  ],
  "INPUT": [
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "3 (inet::SctpCommandCode::SCTP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "9 (inet::SctpCommandCode::SCTP_C_SEND_ORDERED)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "12 (inet::SctpCommandCode::SCTP_C_QUEUE_BYTES_LIMIT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpInfoReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "13 (inet::SctpCommandCode::SCTP_C_QUEUE_MSGS_LIMIT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpInfoReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "14 (inet::SctpCommandCode::SCTP_C_SHUTDOWN)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "15 (inet::SctpCommandCode::SCTP_C_NO_OUTSTANDING)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpOpenReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpAvailableReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpOpenReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "5 (inet::SctpCommandCode::SCTP_C_CLOSE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpCommandReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SctpSendReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "10 (inet::SctpStatusInd::SCTP_I_ABORT)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "12 (inet::SctpStatusInd::SCTP_I_SEND_MSG)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "13 (inet::SctpStatusInd::SCTP_I_SHUTDOWN_RECEIVED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "14 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_FULL)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "15 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_ABATED)",
    "ctrl": "",
    "tags": [
     "inet::SctpSendQueueAbatedReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
    "ctrl": "",
    "tags": [
     "inet::SctpAvailableReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
    "ctrl": "",
    "tags": [
     "inet::SctpConnectReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "4 (inet::SctpStatusInd::SCTP_I_PEER_CLOSED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
    "ctrl": "",
    "tags": [
     "inet::SctpCommandReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SctpRcvReq",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::SocketReq",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::sctp::SctpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::sctp::SctpHeader"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   }
  ],
  "RTAG": [
   {
    "tagAction": "addTag",
    "tagType": "inet::CreationTimeTag"
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "CWND_TIMER N:NN.N.N.N",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "HB_INT_TIMER N:NN.N.N.N",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "HB_INT_TIMER NN:NN.N.N.N",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "HB_INT_TIMER NN:NN.N.N.NN",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "HB_TIMER NN:NN.N.N.N",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "RTX_TIMER N:NN.N.N.N",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "RTX_TIMER NN:NN.N.N.NN",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "inet::SctpPathInfo",
    "tags": [],
    "msgname": "SACK_TIMER of assoc NN",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TransportProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpAvailableReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpCommandReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpConnectReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpRcvReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SctpSendQueueAbatedReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpAvailableReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpCommandReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpInfoReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpOpenReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpResetReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::SctpSendReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SctpSendReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.transportlayer.sctp.SctpCrcInsertion": {
  "PACKET": [
   {
    "packetAction": "eraseAtFront",
    "chunkType": ""
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::sctp::SctpHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::sctp::SctpHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.transportlayer.tcp_common.TcpCrcInsertionHook": {
  "PACKET": [
   {
    "packetAction": "eraseAtFront",
    "chunkType": ""
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.transportlayer.tcp_lwip.TcpLwip": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   }
  ],
  "INPUT": [
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "trimFront",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "lwip_fast_timer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TransportProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::TransportProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.transportlayer.tcp.Tcp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.common.scenario.ScenarioManager",
    "function": "inet::ScenarioManager::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.power.management.SimpleEpEnergyManagement",
    "function": "inet::power::SimpleEpEnergyManagement::moduleOperationStageCompleted",
    "info": "moduleOperationStageCompleted"
   },
   {
    "call to": "inet.transportlayer.tcp.TcpConnection",
    "function": "inet::tcp::TcpConnection::initConnection",
    "info": "initConnection"
   },
   {
    "call to": "inet.transportlayer.tcp.TcpConnection",
    "function": "inet::tcp::TcpConnection::processAppCommand",
    "info": "processAppCommand"
   },
   {
    "call to": "inet.transportlayer.tcp.TcpConnection",
    "function": "inet::tcp::TcpConnection::processTCPSegment",
    "info": "processTCPSegment"
   },
   {
    "call to": "inet.transportlayer.tcp.Tcp",
    "function": "inet::tcp::Tcp::sendFromConn",
    "info": "sendFromConn"
   }
  ],
  "INPUT": [
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
    "ctrl": "inet::TcpSetTimeToLiveCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
    "ctrl": "inet::TcpOpenCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
    "ctrl": "inet::TcpAcceptCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "8 (inet::TcpCommandCode::TCP_C_QUEUE_BYTES_LIMIT)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DropEligibleInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::PcpInd",
     "inet::TosInd",
     "inet::UserPriorityInd",
     "inet::VlanInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
    "ctrl": "inet::TcpAvailableInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
    "ctrl": "inet::TcpConnectInfo",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
    "ctrl": "inet::TcpCommand",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::EcnReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::EcnReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "ActiveOperationExtraTimer",
    "context": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TransportProtocolInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::EcnInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   }
  ]
 },
 "inet.transportlayer.tcp.TcpConnection": {
  "CALL": [
   {
    "call to": "inet.transportlayer.tcp.TcpConnection",
    "function": "inet::tcp::TcpConnection::initClonedConnection",
    "info": "initClonedConnection"
   },
   {
    "call to": "inet.transportlayer.tcp.TcpConnection",
    "function": "inet::tcp::TcpConnection::initConnection",
    "info": "initConnection"
   },
   {
    "call to": "inet.transportlayer.tcp.Tcp",
    "function": "inet::tcp::Tcp::sendFromConn",
    "info": "sendFromConn"
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::bgp::BgpKeepAliveMessage"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::bgp::BgpOpenMessage"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::bgp::BgpUpdateMessage"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::ByteCountChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::GenericAppMsg"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SequenceChunk"
   },
   {
    "packetAction": "insertAtBack",
    "chunkType": "inet::SliceChunk"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::tcp::TcpHeader"
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   }
  ],
  "SCHEDULE": [
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "DELAYEDACK",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "NMSL",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "REXMIT",
    "context": "filled"
   },
   {
    "msg": "omnetpp::cMessage",
    "kind": "0",
    "ctrl": "",
    "tags": [],
    "msgname": "SYN-REXMIT",
    "context": "filled"
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::EcnReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TransportProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::HopLimitReq"
   }
  ]
 },
 "inet.transportlayer.udp.Udp": {
  "CALL": [
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::arrived",
    "info": "arrived"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterProtocol",
    "info": "handleRegisterProtocol"
   },
   {
    "call to": "inet.common.MessageDispatcher",
    "function": "inet::MessageDispatcher::handleRegisterService",
    "info": "handleRegisterService"
   },
   {
    "call to": "inet.networklayer.common.InterfaceTable",
    "function": "inet::InterfaceTable::interfaceChanged",
    "info": "interfaceChanged"
   },
   {
    "call to": "inet.networklayer.icmpv6.Icmpv6",
    "function": "inet::Icmpv6::sendErrorMessage",
    "info": "sendErrorMessage(datagram, type=%d, code=%d)"
   },
   {
    "call to": "inet.networklayer.ipv4.Icmp",
    "function": "inet::Icmp::sendErrorMessage",
    "info": "sendErrorMessage(datagram, type=%d, code=%d)"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupJoined"
   },
   {
    "call to": "inet.networklayer.ipv4.Igmpv2",
    "function": "inet::Igmpv2::receiveSignal",
    "info": "ipv4MulticastGroupLeft"
   },
   {
    "call to": "inet.networklayer.ipv4.Ipv4",
    "function": "inet::Ipv4::registerHook",
    "info": "registerHook()"
   },
   {
    "call to": "inet.networklayer.ipv6.Ipv6",
    "function": "inet::Ipv6::registerHook",
    "info": "registerHook()"
   }
  ],
  "INPUT": [
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::L4PortReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
    "ctrl": "inet::UdpBindCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
    "ctrl": "inet::UdpConnectCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpJoinMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpLeaveMulticastGroupsCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetBroadcastCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetMulticastInterfaceCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetMulticastLoopCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
    "ctrl": "inet::UdpSetTimeToLiveCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "appIn",
    "msg": "inet::Request",
    "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
    "ctrl": "inet::UdpCloseCommand",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::SocketReq"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressInd",
     "inet::PacketProtocolTag"
    ]
   },
   {
    "gate": "ipIn",
    "msg": "inet::Packet",
    "kind": "4",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::PacketProtocolTag",
     "inet::TosInd"
    ]
   }
  ],
  "OUTPUT": [
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
    "ctrl": "inet::UdpErrorIndication",
    "tags": [
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Indication",
    "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
    "ctrl": "inet::UdpSocketClosedIndication",
    "tags": [
     "inet::SocketInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolInd",
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::physicallayer::Ieee80211ChannelInd",
     "inet::physicallayer::Ieee80211ModeInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::ErrorRateInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SignalPowerInd",
     "inet::SignalTimeInd",
     "inet::SnirInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::Ieee802SapInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd",
     "inet::UserPriorityInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::MacAddressInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "appOut",
    "msg": "inet::Packet",
    "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
    "ctrl": "",
    "tags": [
     "inet::DscpInd",
     "inet::EcnInd",
     "inet::HopLimitInd",
     "inet::InterfaceInd",
     "inet::L3AddressInd",
     "inet::L4PortInd",
     "inet::NetworkProtocolInd",
     "inet::SocketInd",
     "inet::TosInd",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DirectionTag",
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::HopLimitReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::InterfaceReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   },
   {
    "gate": "ipOut",
    "msg": "inet::Packet",
    "kind": "0",
    "ctrl": "",
    "tags": [
     "inet::DispatchProtocolReq",
     "inet::L3AddressReq",
     "inet::MulticastReq",
     "inet::PacketProtocolTag",
     "inet::TransportProtocolInd"
    ]
   }
  ],
  "PACKET": [
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::Icmpv6Header"
   },
   {
    "packetAction": "peekAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "peekDataAsBytes",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": ""
   },
   {
    "packetAction": "peekDataAt",
    "chunkType": "inet::BytesChunk"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::IcmpHeader"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Icmpv6Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "popAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "setFrontOffset",
    "chunkType": ""
   },
   {
    "packetAction": "trim",
    "chunkType": ""
   }
  ],
  "STAG": [
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L3AddressReq"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::L4PortInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "addTagIfAbsent",
    "tagType": "inet::TransportProtocolInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::L4PortInd"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::MulticastReq"
   },
   {
    "tagAction": "addTag",
    "tagType": "inet::SocketInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::ErrorRateInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::HopLimitReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceReq"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::MulticastReq"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::L3AddressInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::SocketReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::DispatchProtocolReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::L4PortReq"
   },
   {
    "tagAction": "removeTagIfPresent",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::PacketProtocolTag"
   },
   {
    "tagAction": "removeTag",
    "tagType": "inet::SocketReq"
   }
  ],
  "TAG": [
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv4InterfaceData"
   },
   {
    "tagAction": "getTagForUpdate",
    "tagType": "inet::Ipv6InterfaceData"
   }
  ]
 },
 "inet.transportlayer.udp.UdpCrcInsertionHook": {
  "PACKET": [
   {
    "packetAction": "eraseAtFront",
    "chunkType": ""
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv4Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::Ipv6Header"
   },
   {
    "packetAction": "insertAtFront",
    "chunkType": "inet::UdpHeader"
   },
   {
    "packetAction": "peekData",
    "chunkType": ""
   },
   {
    "packetAction": "removeAtFront",
    "chunkType": "inet::UdpHeader"
   }
  ],
  "STAG": [
   {
    "tagAction": "findTag",
    "tagType": "inet::InterfaceInd"
   },
   {
    "tagAction": "findTag",
    "tagType": "inet::NetworkProtocolInd"
   },
   {
    "tagAction": "getTag",
    "tagType": "inet::PacketProtocolTag"
   }
  ]
 },
 "inet.tutorials.configurator.ConfiguratorA": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.configurator.ConfiguratorB": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.configurator.ConfiguratorC": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.configurator.ConfiguratorD": {
  "CALL": [
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.configurator.ConfiguratorE": {
  "CALL": [
   {
    "call to": "inet.linklayer.ethernet.basic.EthernetMac",
    "function": "inet::EthernetMac::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ethernet.EthernetInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.queueing.ExampleCompoundPriorityQueue": {
  "CALL": [
   {
    "call to": "inet.queueing.classifier.WrrClassifier",
    "function": "inet::queueing::WrrClassifier::pushPacket",
    "info": "pushPacket"
   },
   {
    "call to": "inet.queueing.scheduler.PriorityScheduler",
    "function": "inet::queueing::PriorityScheduler::pullPacket",
    "info": "pullPacket"
   }
  ],
  "RTAG": [
   {
    "tagAction": "mapAllTags",
    "tagType": "inet::FlowTag"
   }
  ]
 },
 "inet.tutorials.wireless.WirelessA": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.wireless.WirelessB": {
  "CALL": [
   {
    "call to": "inet.linklayer.acking.AckingWirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 },
 "inet.tutorials.wireless.WirelessC": {
  "CALL": [
   {
    "call to": "inet.linklayer.common.WirelessInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   },
   {
    "call to": "inet.linklayer.loopback.LoopbackInterface",
    "function": "inet::NetworkInterface::receiveSignal",
    "info": "POST_MODEL_CHANGE"
   }
  ]
 }
}
